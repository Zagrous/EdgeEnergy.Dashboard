<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework"
    xmlns:igWindows="http://infragistics.com/Windows"
    xmlns:igDp="http://infragistics.com/DataPresenter"
    xmlns:toolkit="clr-namespace:Infragistics.Windows.Toolkit.Controls;assembly=Infragistics.Windows.Toolkit"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:loc="clr-namespace:EdgeEnergy.CutterDashboard.Assets.LocalizedResources"
    mc:Ignorable="d"
    xmlns:local="clr-namespace:EdgeEnergy.CutterDashboard.Views">

    <loc:LocalizedResources x:Key="Strings" />


    <!-- ******************************************** MainPage STYLES *********************************************** 
    *************************************************************************************************************-->

    <!-- ******************** Color Brushes ********************** -->
    <SolidColorBrush x:Key="BodyTextColorBrush" Color="#FF313131" />
    <SolidColorBrush x:Key="GreyButton_Normal" Color="#FF2D2D2D" />
    <SolidColorBrush x:Key="GreyArrow_over" Color="#FF161616" />
    <SolidColorBrush x:Key="Orange_Standard" Color="#FF00CCFE" />
    <SolidColorBrush x:Key="CellItemNormalBorderBrush" Color="#FF3F3F3F" />
    <SolidColorBrush x:Key="InputBg" Color="Black" />
    <SolidColorBrush x:Key="GreenText" Color="#FF33CC33" />
    <SolidColorBrush x:Key="TooltipTextBrush" Color="#FFC4C4C4" />

    <!-- ******************** Header Styles ********************** -->

    <!-- Header Glow Brush -->
    <RadialGradientBrush x:Key="BrushHeaderGlow" Center="0.504,0.747" GradientOrigin="0.504,0.747" RadiusY="0.54"
                         RadiusX="1.817">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.50499999523162842" CenterY="0.74599999189376831" ScaleX="0.286" />
                <SkewTransform AngleX="0" AngleY="0" CenterX="0.50499999523162842" CenterY="0.74599999189376831" />
                <RotateTransform Angle="0" CenterX="0.50499999523162842" CenterY="0.74599999189376831" />
                <TranslateTransform X="-0.003" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#668C8C8C" />
        <GradientStop Color="#008C8C8C" Offset="1" />
    </RadialGradientBrush>

    <!-- Header Opacity Mask Brush -->
    <LinearGradientBrush x:Key="BrushHeaderOpMask" EndPoint="0.5,-0.139" StartPoint="0.5,0.806">
        <GradientStop Color="Black" Offset="0" />
        <GradientStop Offset="1" />
    </LinearGradientBrush>


    <!-- ******************** Stocks Add/Search ********************** -->

    <!-- AutoCompleteBox Background Style -->
    <LinearGradientBrush x:Key="AutoCompleteBoxBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF333333" Offset="0" />
        <GradientStop Color="Black" Offset="1" />
    </LinearGradientBrush>


    <!-- Rectangle behind autocomplete -->
    <LinearGradientBrush x:Key="GradientStroke1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Black" Offset="0" />
        <GradientStop Color="#FF666666" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="VerticalScrollBarBackground" Color="#FF181818" />

    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />

    <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0" />
        <GradientStop Color="#EDEDED" Offset="0.20" />
        <GradientStop Color="#EDEDED" Offset="0.80" />
        <GradientStop Color="#E3E3E3" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BaseOverlayBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFf2f6f9"
                              Offset="0" />
                <GradientStop Color="#FFccd3d8"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BaseBorderBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFccd3d8"
                              Offset="0" />
                <GradientStop Color="#FF8c9194"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BaseColorBrush"
                     Color="#FF5A5F63" />

    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0" />
        <GradientStop Color="#EBEBEB" Offset="0.5" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />

    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05" />
        <GradientStop Color="#E2E3EA" Offset="0.07" />
        <GradientStop Color="#E3E9EF" Offset="1" />
    </LinearGradientBrush>


    <!-- XamGrid Brushes -->

    <SolidColorBrush x:Key="GrayForegroundStyle" Color="Black" />
    <SolidColorBrush x:Key="GridBackgroundBrush" Color="#FF1F1F1F" />
    <SolidColorBrush x:Key="GridBorderBrush" Color="#FF606060" />
    <SolidColorBrush x:Key="CellItemForegroundBrush" Color="#FF979797" />
    <SolidColorBrush x:Key="CellItemNormalBackgroundBrush" Color="#FF212121" />
    <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="#FF191919" />
    <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="#FF121212" />
    <LinearGradientBrush x:Key="CellItemSelectedBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF00CCFE" Offset="0" />
        <GradientStop Color="#FF009AC1" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderNormalBackgroundBrush" Color="#FF4D4D4D" />
    <SolidColorBrush x:Key="HeaderNormalForegroundBrush" Color="#FFD2D2D2" />
    <SolidColorBrush x:Key="HeaderNormalBorderBrush" Color="#FF5A5A5A" />
    <SolidColorBrush x:Key="PopupBorderBrush" Color="#FFA7ABB0" />
    <SolidColorBrush x:Key="PopupBackgroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="FilterSelectionItemBackgroundBrush" Color="#FF373737" />
    <SolidColorBrush x:Key="FilterSelectionItemBorderBrush" Color="#FF606060" />
    <SolidColorBrush x:Key="FilterSelectionItemHighlightBrush" Color="#99FFFFFF" />
    <SolidColorBrush x:Key="HeaderCellGlyphBrush" Color="#FF838383" />
    <SolidColorBrush x:Key="HeaderHoverBackgroundBrush" Color="#FF161616" />
    <SolidColorBrush x:Key="HeaderMovingBackgroundBrush" Color="#FF292929" />
    <SolidColorBrush x:Key="HeaderMovingBorderBrush" Color="#FF292929" />

    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, GroupByAreaBackgroundHighlight}"
                     Color="Transparent" />

    <SolidColorBrush x:Key="{x:Static igDp:DataPresenterBrushKeys.BaseBackgroundKey}" Color="#FF3B3B3B" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, AddRowBackground}" Color="#FF474747" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, FixedRecord}" Color="#FF3D3D3D" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelForeground}" Color="Gainsboro" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelInnerBorder}" Color="#44FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelOuterBorder}" Color="#44000000" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, NestedContentBackgroundBorder}"
                     Color="#44747474" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, GroupByNavBorderBrush}" Color="#FF4D4D4D" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, GroupByLabelHighlightBorder}"
                     Color="#FF8D8D8D" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, BreadcrumbItemForegroundHover}"
                     Color="#FF505050" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, SummaryRecordPresenterBorder}"
                     Color="#FFC6C6CA" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, SummaryButtonBackground}"
                     Color="#FF00A503" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, SummaryButtonPopupBackground}"
                     Color="#FFC63636" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, SummaryButtonPopupBorder}"
                     Color="#FF2F3568" />
    <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, SummaryCSCItemForeground}"
                     Color="#FF666666" />
    <SolidColorBrush x:Key="{x:Static igDp:DataPresenterBrushKeys.SummaryCSCItemForegroundKey}" Color="#FF666666" />


    <!-- ____________________________________________________________________________ -->
    <!--                                                                              -->
    <!--                             Storyboards                                      -->
    <!-- ____________________________________________________________________________ -->
    <Storyboard x:Key="ExpandLabel">
        <DoubleAnimationUsingKeyFrames
            Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" BeginTime="0:0:0">
            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="CollapseLabel">
        <DoubleAnimationUsingKeyFrames
            Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" BeginTime="0:0:00">
            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />

    <!-- About Button Style -->
    <Style x:Key="AboutButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FF73A9D8" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Margin" Value="0,0,30,0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="hover" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="hover" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="normal" d:IsOptimized="True" />
                                        <DoubleAnimation Duration="0" To="0.5"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="normal"
                              Data="M-0.020833334,0.020911355 C-0.020833334,0.020911355 45.96875,2.8144154E-14 45.96875,2.8144154E-14 C45.96875,2.8144154E-14 45.989582,10.666667 46,16 C46,17.10457 45.104568,18 44,18 L2,18 C0.89543051,18 0,17.10457 0,16 C-0.0069444445,10.673637 -0.020833334,0.020911355 -0.020833334,0.020911355 z"
                              Fill="{StaticResource GreyButton_Normal}" Stretch="Fill" Margin="0"
                              UseLayoutRounding="False" />
                        <Path x:Name="hover"
                              Data="M-0.020833334,0.020911355 C-0.020833334,0.020911355 45.96875,2.8144154E-14 45.96875,2.8144154E-14 C45.96875,2.8144154E-14 45.989582,10.666667 46,16 C46,17.10457 45.104568,18 44,18 L2,18 C0.89543051,18 0,17.10457 0,16 C-0.0069444445,10.673637 -0.020833334,0.020911355 -0.020833334,0.020911355 z"
                              Fill="{StaticResource GreyArrow_over}" Stretch="Fill" Margin="0"
                              UseLayoutRounding="False" Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="0" VerticalAlignment="Center">
                            <ContentPresenter.Content>
                                <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" Foreground="#FFB2B2B2"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11"
                                           Margin="0,-1,0,0" FontFamily="Arial" />
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ValidationToolTipTemplate -->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform"
                                                               Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                               Storyboard.TargetProperty="Opacity">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                           Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                           Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />
            <Border Background="#FFDC000C" CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock Margin="8,4,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="Black"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- CommonValidationToolTipTemplate -->
    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="{x:Type ToolTip}">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Translation"
                                                 Storyboard.TargetProperty="X" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root"
                                                 Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Translation"
                                             Storyboard.TargetProperty="X" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25" />
            </Grid.RenderTransform>
            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />
            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock Margin="8,4,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="#FFFFFFFF"
                           Text="{Binding (Validation.Errors)[0].Exception.Message}" TextWrapping="Wrap" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- ******************** Busy Indicator ********************** -->

    <Style x:Key="BusyIndicatorStyle1" TargetType="{x:Type toolkit:BusyIndicator}">
        <Setter Property="BusyContent" Value="Please wait..." />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="Black" />
                    <Setter Property="Opacity" Value="0.5" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ProgressBar}">
                    <Setter Property="IsIndeterminate" Value="True" />
                    <Setter Property="Height" Value="15" />
                    <Setter Property="Margin" Value="8,0,8,8" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="0:0:0.1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolkit:BusyIndicator}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001"
                                                                       Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                       Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001"
                                                                       Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                       Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" Fill="Black" Opacity="0.7" />
                        <ContentPresenter x:Name="busycontent">
                            <ContentPresenter.Content>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Border BorderThickness="1" Background="{x:Null}" CornerRadius="2"
                                            BorderBrush="{x:Null}">
                                        <Border CornerRadius="1.5" Margin="1" Background="{x:Null}">
                                            <Grid MinWidth="150">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ContentPresenter
                                                    ContentTemplate="{TemplateBinding BusyContentTemplate}"
                                                    Content="{TemplateBinding BusyContent}" Margin="8" />
                                                <ProgressBar Grid.Row="1" Style="{TemplateBinding ProgressBarStyle}"
                                                             Foreground="#FF00CCFE" Background="#FF525252">
                                                    <ProgressBar.BorderBrush>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FF747474" Offset="0" />
                                                            <GradientStop Color="#FF4B4B4B" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </ProgressBar.BorderBrush>
                                                </ProgressBar>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Andie - - - AutoComplete TextBox Style -->

    <Style x:Key="MainAutoCompleteTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip"
                                                                       Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#5EC9C9C9" />
                                <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                    <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False"
                                                  Padding="{TemplateBinding Padding}" Foreground="Black" />
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C"
                                BorderThickness="1" CornerRadius="1">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         Template="{StaticResource ValidationToolTipTemplate}"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames
                                                        Storyboard.TargetName="validationTooltip"
                                                        Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top"
                                  Width="12" Background="Transparent">
                                <Path Fill="#FFDC000C" Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" />
                                <Path Fill="#ffffff" Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#272727" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#272727" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxStyle2" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="{x:Null}" />
        <!-- -->
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" CornerRadius="2" Margin="3">
                        <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}"
                                      Template="{DynamicResource ScrollViewerControlTemplate1}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AutoCompleteBoxStyle1" TargetType="{x:Type controls:AutoCompleteBox}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="7,2,2,2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource AutoCompleteBoxBgBrush}" />
        <Setter Property="Foreground" Value="#ffcccccc" />
        <Setter Property="MinWidth" Value="45" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AutoCompleteBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBox x:Name="Text" FontSize="14.667" FontWeight="Bold" Foreground="#FFE2E2E2"
                                 BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{x:Null}" IsTabStop="True" Margin="0" Padding="{TemplateBinding Padding}"
                                 VerticalAlignment="Center" SelectionBrush="#FF646464" />
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1"
                                CornerRadius="1" Visibility="Collapsed">
                            <Border.ToolTip>
                                <ToolTip x:Name="validationTooltip" Placement="Right">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames
                                                        Storyboard.TargetProperty="IsHitTestVisible"
                                                        Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>True</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                    <ToolTip.Template>
                                        <ControlTemplate TargetType="{x:Type ToolTip}">
                                            <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                                                <Grid.RenderTransform>
                                                    <TranslateTransform X="-25" />
                                                </Grid.RenderTransform>
                                                <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4" />
                                                <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3" />
                                                <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2" />
                                                <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1" />
                                                <Border Background="#FFDC000C" CornerRadius="2">
                                                    <TextBlock Foreground="Black" MaxWidth="250" Margin="8,4"
                                                               TextWrapping="Wrap"
                                                               Text="{Binding (Validation.Errors)[0].ErrorContent}" />
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </ToolTip.Template>
                                </ToolTip>
                            </Border.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0"
                                  VerticalAlignment="Top" Width="12">
                                <Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="#FFDC000C" Margin="1,3,0,0" />
                                <Path Data="M0,0L2,0 8,6 8,8" Fill="Black" Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup" Width="270">
                            <Grid Opacity="{TemplateBinding Opacity}">
                                <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" CornerRadius="5"
                                        Background="#ff000000">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="1" Y="1" />
                                    </Border.RenderTransform>
                                    <Border HorizontalAlignment="Stretch" Opacity="1.0" BorderThickness="0"
                                            CornerRadius="5" Padding="0">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform X="-1" Y="-1" />
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Grid Margin="4">
                                            <ListBox x:Name="Selector" BorderThickness="0"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                     ItemTemplate="{TemplateBinding ItemTemplate}"
                                                     ItemContainerStyle="{StaticResource MainListBoxItemStyle1}"
                                                     Style="{StaticResource ListBoxStyle2}" /> <!-- ItemContainerStyle="{StaticResource MainListBoxItemStyle}" Style="{StaticResource MainListBoxStyle}" -->
                                        </Grid>
                                        <!--ListBox x:Name="Selector" BorderThickness="0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"  ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" /-->
                                    </Border>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  MainListBox Style -->
    <Style x:Key="MainListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip"
                                                                       Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <ScrollViewer x:Name="ScrollViewer" Background="{TemplateBinding Background}"
                                          BorderBrush="Transparent" BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"><!-- Style="{StaticResource ScrollVieweStocksNames}" -->
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         Template="{StaticResource ValidationToolTipTemplate}"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames
                                                        Storyboard.TargetName="validationTooltip"
                                                        Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top"
                                  Width="10" Background="Transparent">
                                <Path Fill="#FFDC000C" Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" />
                                <Path Fill="#ffffff" Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Andie - MainListBox Item Style -->
    <Style x:Key="MainListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.15" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="fillColor"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor2"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.15" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="fillColor2"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Fill="#FF9F9F9F" RadiusX="1" RadiusY="1" IsHitTestVisible="False"
                                   Opacity="0" />
                        <Rectangle x:Name="fillColor2" Fill="#FFBADDE9" RadiusX="1" RadiusY="1"
                                   IsHitTestVisible="False" Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Add Button Style-->
    <Style x:Key="AddButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="58" Height="40" Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="over" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="0:0:0.1"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="0:0:0.1"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="0"
                                                                      Storyboard.TargetName="rectangle"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FF1A1919" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="rectangle" Stretch="Fill" Stroke="Black"
                              Data="M0.49999937,0.5 C0.49999937,0.5 36.166668,0.5 50.5,0.5 C54.365993,0.5 57.5,3.6340067 57.5,7.5 L57.5,29.5 C57.5,33.365993 54.365993,36.5 50.5,36.5 C36.166668,36.5 0.49999818,36.5 0.49999818,36.5 C0.49999818,36.5 0.49999937,0.5 0.49999937,0.5 z"
                              UseLayoutRounding="False">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.949" StartPoint="0.5,0.074">
                                    <GradientStop Color="Black" Offset="1" />
                                    <GradientStop Color="#FF333333" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Path x:Name="over" Stretch="Fill" Stroke="Black"
                              Data="M0.49999937,0.5 C0.49999937,0.5 36.166668,0.5 50.5,0.5 C54.365993,0.5 57.5,3.6340067 57.5,7.5 L57.5,29.5 C57.5,33.365993 54.365993,36.5 50.5,36.5 C36.166668,36.5 0.49999818,36.5 0.49999818,36.5 C0.49999818,36.5 0.49999937,0.5 0.49999937,0.5 z"
                              UseLayoutRounding="False" Opacity="0">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.949" StartPoint="0.5,0.074">
                                    <GradientStop Color="Black" Offset="1" />
                                    <GradientStop Color="#FF5D5D5D" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Content>
                                <TextBlock TextWrapping="NoWrap" FontFamily="Arial" FontSize="14" Foreground="Black"
                                           FontWeight="Bold" Text="{TemplateBinding Content}" />
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- AutoComplete Text Style-->
    <Style x:Key="AutoCompleteTxt" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>


    <!-- ******************** Watched Stocks ********************** -->

    <!-- ListBox Style-->
    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid Height="42" Margin="30,0,0,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip"
                                                                       Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="2" Height="42">
                            <ScrollViewer x:Name="ScrollViewer" HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" BorderBrush="Transparent"
                                          BorderThickness="0" Padding="{TemplateBinding Padding}" Height="42">
                                <ItemsPresenter Margin="0" Height="42" Cursor="Hand" HorizontalAlignment="Left" />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         Template="{StaticResource ValidationToolTipTemplate}"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames
                                                        Storyboard.TargetName="validationTooltip"
                                                        Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top"
                                  Width="10" Background="Transparent">
                                <Path Fill="#FFDC000C" Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" />
                                <Path Fill="#ffffff" Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Item: Close button Style -->
    <Style x:Key="StockTemplateButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="9" Height="9">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="path"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="path"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="path1"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Fill="Black" Stretch="Fill" Opacity="0" UseLayoutRounding="False"
                              Data="M 7.14544677734375,0.65167236328125 C7.14544677734375,0.65167236328125 4.3636474609375,3.40447998046875 4.3636474609375,3.40447998046875 4.3636474609375,3.40447998046875 1.682373046875,0.8135986328125 1.682373046875,0.8135986328125 1.682373046875,0.8135986328125 0,2.601806640625 0,2.601806640625 0,2.601806640625 2.6181640625,5.13177490234375 2.6181640625,5.13177490234375 2.6181640625,5.13177490234375 0.1488037109375,7.575469970703125 0.1488037109375,7.575469970703125 0.1488037109375,7.575469970703125 1.834716796875,9.20458984375 1.834716796875,9.20458984375 1.834716796875,9.20458984375 4.3636474609375,6.818389892578125 4.3636474609375,6.818389892578125 4.3636474609375,6.818389892578125 6.9818115234375,9.348358154296875 6.9818115234375,9.348358154296875 6.9818115234375,9.348358154296875 8.8323974609375,7.722686767578125 8.8323974609375,7.722686767578125 8.8323974609375,7.722686767578125 6.151123046875,5.13177490234375 6.151123046875,5.13177490234375 6.151123046875,5.13177490234375 9,2.443695068359375 9,2.443695068359375 9,2.443695068359375 7.14544677734375,0.65167236328125 7.14544677734375,0.65167236328125 z"
                              RenderTransformOrigin="0.5,0.5" Width="9" Height="9">
                            <Path.Effect>
                                <BlurEffect Radius="33" />
                            </Path.Effect>
                        </Path>
                        <Path x:Name="path1" Fill="#bfbfbf" Stretch="Fill" Opacity="1" UseLayoutRounding="False"
                              Data="M 7.14544677734375,0.65167236328125 C7.14544677734375,0.65167236328125 4.3636474609375,3.40447998046875 4.3636474609375,3.40447998046875 4.3636474609375,3.40447998046875 1.682373046875,0.8135986328125 1.682373046875,0.8135986328125 1.682373046875,0.8135986328125 0,2.601806640625 0,2.601806640625 0,2.601806640625 2.6181640625,5.13177490234375 2.6181640625,5.13177490234375 2.6181640625,5.13177490234375 0.1488037109375,7.575469970703125 0.1488037109375,7.575469970703125 0.1488037109375,7.575469970703125 1.834716796875,9.20458984375 1.834716796875,9.20458984375 1.834716796875,9.20458984375 4.3636474609375,6.818389892578125 4.3636474609375,6.818389892578125 4.3636474609375,6.818389892578125 6.9818115234375,9.348358154296875 6.9818115234375,9.348358154296875 6.9818115234375,9.348358154296875 8.8323974609375,7.722686767578125 8.8323974609375,7.722686767578125 8.8323974609375,7.722686767578125 6.151123046875,5.13177490234375 6.151123046875,5.13177490234375 6.151123046875,5.13177490234375 9,2.443695068359375 9,2.443695068359375 9,2.443695068359375 7.14544677734375,0.65167236328125 7.14544677734375,0.65167236328125 z"
                              Width="9" Height="9" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" />
                        <Rectangle Width="9" Height="9" Fill="#00000000" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Item: Eye Toggle Button Style-->
    <Style x:Key="StockNameToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Canvas Width="14" Height="10">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="canvas"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="canvas1"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                                <VisualState x:Name="Checked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas x:Name="canvas1" Height="10" Width="14">
                            <Canvas x:Name="canvas" Height="10" Width="14" RenderTransformOrigin="0.5,0.5" Opacity="0">
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Canvas.Effect>
                                    <BlurEffect Radius="28" />
                                </Canvas.Effect>
                                <Path
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Height="6"
                                    Width="6"
                                    Stretch="Fill"
                                    Opacity="1"
                                    Data="M 5,5 C5,5 6,5 6,5 6,5 6,4 6,4 6,4 7,4 7,4 7,4 7,5 7,5 7,5 7,6 7,6 7,6 6,6 6,6 6,6 5,6 5,6 5,6 5,5 5,5 zM 4,5 C4,6.6568756103515625 5.3431396484375,8 7,8 8.6568603515625,8 10,6.6568756103515625 10,5 10,3.3431243896484375 8.6568603515625,2 7,2 5.3431396484375,2 4,3.3431243896484375 4,5 z"
                                    Fill="#ffffff" UseLayoutRounding="False" Canvas.Left="4" Canvas.Top="2" />
                                <Path
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Height="8"
                                    Width="12"
                                    Stretch="Fill"
                                    Opacity="1"
                                    Data="M 1,6 C1,3.7908172607421875 4.92889404296875,2 7,2 9.07110595703125,2 13,3.7908172607421875 13,6 13,8.209182739257812 9.07110595703125,10 7,10 6.10394287109375,10 3.86016845703125,9.664794921875 2.737274169921875,9.105545043945312 "
                                    Stroke="#ffffff"
                                    StrokeThickness="1" UseLayoutRounding="False" Canvas.Left="1" Canvas.Top="2" />
                                <Path
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    Height="5"
                                    Width="14"
                                    Stretch="Fill"
                                    Opacity="1"
                                    Data="M 0,5 C0,2.1666717529296875 4.583709716796875,0 7,0 9.416290283203125,0 14,2 14,5 "
                                    Stroke="#ffffff"
                                    StrokeThickness="1" UseLayoutRounding="False" />
                            </Canvas>
                            <Path
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="6"
                                Width="6"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 5,5 C5,5 6,5 6,5 6,5 6,4 6,4 6,4 7,4 7,4 7,4 7,5 7,5 7,5 7,6 7,6 7,6 6,6 6,6 6,6 5,6 5,6 5,6 5,5 5,5 zM 4,5 C4,6.6568756103515625 5.3431396484375,8 7,8 8.6568603515625,8 10,6.6568756103515625 10,5 10,3.3431243896484375 8.6568603515625,2 7,2 5.3431396484375,2 4,3.3431243896484375 4,5 z"
                                Fill="#ffffff" UseLayoutRounding="False" Canvas.Left="4" Canvas.Top="2" />
                            <Path
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="8"
                                Width="12"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 1,6 C1,3.7908172607421875 4.92889404296875,2 7,2 9.07110595703125,2 13,3.7908172607421875 13,6 13,8.209182739257812 9.07110595703125,10 7,10 6.10394287109375,10 3.86016845703125,9.664794921875 2.737274169921875,9.105545043945312 "
                                Stroke="#ffffff"
                                StrokeThickness="1" UseLayoutRounding="False" Canvas.Left="1" Canvas.Top="2" />
                            <Path
                                Margin="0,0,0,0"
                                HorizontalAlignment="Left"
                                Height="5"
                                Width="14"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 0,5 C0,2.1666717529296875 4.583709716796875,0 7,0 9.416290283203125,0 14,2 14,5 "
                                Stroke="#ffffff"
                                StrokeThickness="1" UseLayoutRounding="False" />
                        </Canvas>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" />
                        <Rectangle Height="10" Width="14" Fill="#00000000" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox Item Style-->
    <Style x:Key="StocksListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="fillColor"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FF9D9D9D" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="fillColor"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FF00BEFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="rectangle1"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#99000000" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="path2"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#99000000" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="path1_Copy"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#99000000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="canvas"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="button"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="toggleButton"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor2"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".75" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="FocusVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="rectangle1"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="path2"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="path1_Copy"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Fill="#FFBADDE9" RadiusX="1" RadiusY="1" IsHitTestVisible="False"
                                   Opacity="0" Visibility="Collapsed" />
                        <Rectangle x:Name="fillColor2" Fill="#FFBADDE9" RadiusX="1" RadiusY="1"
                                   IsHitTestVisible="False" Opacity="0" Visibility="Collapsed" />
                        <Rectangle x:Name="FocusVisualElement" StrokeThickness="0" RadiusX="1" RadiusY="1"
                                   Visibility="Collapsed" />

                        <Grid VerticalAlignment="Center" Height="37" Margin="0" MinWidth="84">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="18" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="66" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle1" Fill="#4C000000" Grid.Column="1" Height="37" Width="Auto" />
                            <StackPanel Margin="0,10" Grid.Column="1" Orientation="Horizontal"
                                        d:LayoutOverrides="Width">
                                <TextBlock VerticalAlignment="Center" Text="{Binding Symbol}" TextWrapping="Wrap"
                                           Foreground="{Binding Brush}" FontSize="12" FontWeight="Bold" Margin="0"
                                           Cursor="Hand" Width="Auto" />
                                <!--<TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Details.LastTradeAmount, Mode=OneWay}" TextWrapping="Wrap" Foreground="#FFDEDEDE" FontSize="12" Cursor="Hand" Width="0" Margin="7,0,0,0" FontFamily="Arial" Visibility="Hidden"/>-->
                            </StackPanel>
                            <Path x:Name="path1_Copy" Fill="#4C000000" Stretch="Fill" UseLayoutRounding="False"
                                  Data="M8,5.6843419E-14 L20.284435,5.6843419E-14 L20.284435,37 C20.284435,37 5.3044708E-16,36.999989 5.3044708E-16,36.999989 C5.3044708E-16,36.999989 1.7681569E-16,17.604166 0,7.9999995 C-5.9604645E-08,3.5817215 3.581722,-4.768371E-07 8,5.6843419E-14 z"
                                  Margin="0" Height="37" VerticalAlignment="Top" />
                            <Canvas x:Name="canvas" Height="37" VerticalAlignment="Top" Grid.Column="2">
                                <Path x:Name="path2" Fill="#4C000000" Stretch="Fill" Height="37"
                                      HorizontalAlignment="Right" Width="66" UseLayoutRounding="False"
                                      Data="M111.87561,5.6843419E-14 C111.87561,5.6843419E-14 156.03087,5.6843419E-14 156.03087,5.6843419E-14 C164.40585,0.12404486 166.65584,5.0857949 169.90582,12.280332 L178,37 C178,37 143.41727,37 111.87561,37 C111.87561,37 111.87561,5.6843419E-14 111.87561,5.6843419E-14 z" />
                                <ToggleButton x:Name="toggleButton" Height="10"
                                              Style="{StaticResource StockNameToggleButton}" Width="14"
                                              Content="ToggleButton" Canvas.Left="11" Canvas.Top="13" Cursor="Hand"
                                              Visibility="Collapsed" />
                                <Button x:Name="button"
                                        Command="{x:Static local:StocksView.DeleteItem}"
                                        CommandParameter="{Binding Symbol}" Height="9"
                                        Style="{StaticResource StockTemplateButton}"
                                        Canvas.Left="36" Canvas.Top="14" Width="9" BorderThickness="0"
                                        Background="{x:Null}" BorderBrush="{x:Null}" Margin="-6,0,0,0" />
                            </Canvas>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ******************** Time Range Filter ********************** -->

    <!-- RadioButton Style -->
    <Style x:Key="StockTimeSelctorRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="#FF448DCA" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="50" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Height="32" Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="border"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" Background="Black" Margin="0,1,0,0" Visibility="Collapsed" />
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="Center" VerticalAlignment="Center" Margin="13,0"
                                          Visibility="Collapsed" />
                        <TextBlock Margin="13,0" Text="{TemplateBinding Content}" VerticalAlignment="Center"
                                   d:LayoutOverrides="Width" HorizontalAlignment="Center" FontSize="12"
                                   FontFamily="Arial" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10,0" />
    </Style>

    <!-- ******************** Chart Type Filter ********************** -->

    <!-- Tooltip Style -->
    <Style x:Key="TooltipStyle1" TargetType="{x:Type ToolTip}">
        <Setter Property="MaxWidth" Value="200" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border CornerRadius="4" Background="#99000000" BorderThickness="1">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" />
                        </Border.Effect>
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.507,0.042" StartPoint="0.509,1.047">
                                <GradientStop Color="#9900CCFF" Offset="0.605" />
                                <GradientStop Color="#FF00CCFF" Offset="0.972" />
                                <GradientStop Color="#3300CCFF" Offset="0.028" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="10,5,10,5" Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tooltip: Text Style -->
    <Style x:Key="TooltipText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MaxWidth" Value="200" />
    </Style>

    <!-- ChartType RadioButton Style -->
    <Style x:Key="ChartType_RadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="#FF448DCA" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="4,1,0,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Width="46" Height="26">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.6"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="path" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="pressed"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="pressed"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(RadialGradientBrush.Center)">
                                            <EasingPointKeyFrame KeyTime="00:00:00" Value="0.457,0.996" />
                                        </PointAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="pressed"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(RadialGradientBrush.GradientOrigin)">
                                            <EasingPointKeyFrame KeyTime="00:00:00" Value="0.457,0.996" />
                                        </PointAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="pressed"
                                                                       Storyboard.TargetProperty="(Shape.Fill).(RadialGradientBrush.RadiusX)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.839" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="active"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="canvas"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="focused"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path
                            VerticalAlignment="Top"
                            Height="26"
                            Stretch="Fill"
                            Opacity="1"
                            Data="M 23,11 C23,9 25,7 27,7 27,7 65.33331298828125,7 65.33331298828125,7 67.33331298828125,7 69.33331298828125,9 69.33331298828125,11 69.33331298828125,11 69.33331298828125,29 69.33331298828125,29 69.33331298828125,31 67.33331298828125,33 65.33331298828125,33 65.33331298828125,33 27,33 27,33 25,33 23,31 23,29 23,29 23,11 23,11 z"
                            Fill="#000000" UseLayoutRounding="False" />
                        <Path
                            x:Name="path1"
                            Stretch="Fill"
                            Opacity="0.25"
                            Data="M 24,11 C24,9 25,8 27,8 27,8 65.33331298828125,8 65.33331298828125,8 67.33331298828125,8 68.33331298828125,9 68.33331298828125,11 68.33331298828125,11 68.33331298828125,20.5 68.33331298828125,20.5 68.33331298828125,22.5 24,22.5 24,20.5 24,20.5 24,11 24,11 z"
                            UseLayoutRounding="False" Margin="1,1,1,0" Height="14" VerticalAlignment="Top">
                            <Path.Fill>
                                <LinearGradientBrush
                                    StartPoint="0.4999993116332602,0"
                                    EndPoint="0.4999993116332602,1.2738102504185267">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop
                                                Color="#FFffffff"
                                                Offset="0" />
                                            <GradientStop
                                                Color="#3fffffff"
                                                Offset="0.9944440126419067" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Path
                            x:Name="path"
                            VerticalAlignment="Top"
                            Height="26"
                            Stretch="Fill"
                            Opacity="0"
                            Data="M 23,11 C23,9 25,7 27,7 27,7 65.33331298828125,7 65.33331298828125,7 67.33331298828125,7 69.33331298828125,9 69.33331298828125,11 69.33331298828125,11 69.33331298828125,29 69.33331298828125,29 69.33331298828125,31 67.33331298828125,33 65.33331298828125,33 65.33331298828125,33 27,33 27,33 25,33 23,31 23,29 23,29 23,11 23,11 z"
                            UseLayoutRounding="False">
                            <Path.Fill>
                                <RadialGradientBrush
                                    Center="0.47482035237938414,0.9615384615384616"
                                    GradientOrigin="0.47482035237938414,0.9615384615384616"
                                    RadiusX="0.6366909270541743"
                                    RadiusY="0.6193401630108173">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.47499999403953552" CenterY="0.96200001239776611"
                                                            ScaleX="1.153" ScaleY="1.077" />
                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.47499999403953552"
                                                           CenterY="0.96200001239776611" />
                                            <RotateTransform Angle="0" CenterX="0.47499999403953552"
                                                             CenterY="0.96200001239776611" />
                                            <TranslateTransform X="0.015" Y="-0.048" />
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop
                                                Color="#FF00ccff"
                                                Offset="0" />
                                            <GradientStop
                                                Color="#00ffffff"
                                                Offset="0.9888889789581299" />
                                        </GradientStopCollection>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Path
                            x:Name="active"
                            VerticalAlignment="Top"
                            Height="26"
                            Stretch="Fill"
                            Opacity="0"
                            Data="M 23,11 C23,9 25,7 27,7 27,7 65.33331298828125,7 65.33331298828125,7 67.33331298828125,7 69.33331298828125,9 69.33331298828125,11 69.33331298828125,11 69.33331298828125,29 69.33331298828125,29 69.33331298828125,31 67.33331298828125,33 65.33331298828125,33 65.33331298828125,33 27,33 27,33 25,33 23,31 23,29 23,29 23,11 23,11 z"
                            UseLayoutRounding="False">
                            <Path.Fill>
                                <RadialGradientBrush
                                    Center="0.47482035237938414,0.9615384615384616"
                                    GradientOrigin="0.47482035237938414,0.9615384615384616"
                                    RadiusX="0.6366909270541743"
                                    RadiusY="0.6193401630108173">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.47499999403953552" CenterY="0.96200001239776611"
                                                            ScaleX="1.153" ScaleY="1.077" />
                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.47499999403953552"
                                                           CenterY="0.96200001239776611" />
                                            <RotateTransform Angle="0" CenterX="0.47499999403953552"
                                                             CenterY="0.96200001239776611" />
                                            <TranslateTransform X="0.015" Y="-0.048" />
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop
                                                Color="#FF00ccff"
                                                Offset="0" />
                                            <GradientStop
                                                Color="#00ffffff"
                                                Offset="0.9888889789581299" />
                                        </GradientStopCollection>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Canvas x:Name="canvas"
                                Clip="M1.000001,4 C1.000001,2 1.9924827,1 3.9774458,1 C3.9774458,1 42.022556,1 42.022556,1 C44.007519,1 45,2 45,4 C45,4 44.956726,22.864313 44.956726,22.864313 C44.956726,24.864313 0.95672792,24.864313 0.95672792,22.864313 C0.95672792,22.864313 1.000001,4 1.000001,4 z"
                                Opacity="0">
                            <Path
                                x:Name="active2"
                                VerticalAlignment="Top"
                                Height="26"
                                Stretch="Fill"
                                Data="M 23,11 C23,9 25,7 27,7 27,7 65.33331298828125,7 65.33331298828125,7 67.33331298828125,7 69.33331298828125,9 69.33331298828125,11 69.33331298828125,11 69.33331298828125,29 69.33331298828125,29 69.33331298828125,31 67.33331298828125,33 65.33331298828125,33 65.33331298828125,33 27,33 27,33 25,33 23,31 23,29 23,29 23,11 23,11 z"
                                UseLayoutRounding="False" Width="46">
                                <Path.Fill>
                                    <RadialGradientBrush
                                        Center="0.505,0.336"
                                        GradientOrigin="0.505,0.336"
                                        RadiusX="0.6366909270541743"
                                        RadiusY="0.6193401630108173">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.47499999403953552"
                                                                CenterY="0.96200001239776611" ScaleX="1.153"
                                                                ScaleY="1.077" />
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.47499999403953552"
                                                               CenterY="0.96200001239776611" />
                                                <RotateTransform Angle="0" CenterX="0.47499999403953552"
                                                                 CenterY="0.96200001239776611" />
                                                <TranslateTransform X="0.015" Y="-0.048" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop
                                                    Color="Black"
                                                    Offset="0" />
                                                <GradientStop
                                                    Color="Transparent"
                                                    Offset="0.9888889789581299" />
                                            </GradientStopCollection>
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Canvas>
                        <Path
                            x:Name="focused"
                            VerticalAlignment="Top"
                            Height="26"
                            Stretch="Fill"
                            Opacity="0"
                            Data="M 23,11 C23,9 25,7 27,7 27,7 65.33331298828125,7 65.33331298828125,7 67.33331298828125,7 69.33331298828125,9 69.33331298828125,11 69.33331298828125,11 69.33331298828125,29 69.33331298828125,29 69.33331298828125,31 67.33331298828125,33 65.33331298828125,33 65.33331298828125,33 27,33 27,33 25,33 23,31 23,29 23,29 23,11 23,11 z"
                            UseLayoutRounding="False">
                            <Path.Fill>
                                <RadialGradientBrush
                                    Center="0.47482035237938414,0.9615384615384616"
                                    GradientOrigin="0.47482035237938414,0.9615384615384616"
                                    RadiusX="0.6366909270541743"
                                    RadiusY="0.6193401630108173">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.47499999403953552" CenterY="0.96200001239776611"
                                                            ScaleX="1.153" ScaleY="1.077" />
                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.47499999403953552"
                                                           CenterY="0.96200001239776611" />
                                            <RotateTransform Angle="0" CenterX="0.47499999403953552"
                                                             CenterY="0.96200001239776611" />
                                            <TranslateTransform X="0.015" Y="-0.048" />
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop
                                                Color="#FF00ccff"
                                                Offset="0" />
                                            <GradientStop
                                                Color="#00ffffff"
                                                Offset="0.9888889789581299" />
                                        </GradientStopCollection>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Path
                            x:Name="pressed"
                            VerticalAlignment="Top"
                            Height="26"
                            Stretch="Fill"
                            Data="M 23,11 C23,9 25,7 27,7 27,7 65.33331298828125,7 65.33331298828125,7 67.33331298828125,7 69.33331298828125,9 69.33331298828125,11 69.33331298828125,11 69.33331298828125,29 69.33331298828125,29 69.33331298828125,31 67.33331298828125,33 65.33331298828125,33 65.33331298828125,33 27,33 27,33 25,33 23,31 23,29 23,29 23,11 23,11 z"
                            UseLayoutRounding="False" Opacity="0">
                            <Path.Fill>
                                <RadialGradientBrush
                                    Center="0.47482035237938414,0.9615384615384616"
                                    GradientOrigin="0.47482035237938414,0.9615384615384616"
                                    RadiusX="0.6366909270541743"
                                    RadiusY="0.6193401630108173">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.47499999403953552" CenterY="0.96200001239776611"
                                                            ScaleX="1.153" ScaleY="1.077" />
                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.47499999403953552"
                                                           CenterY="0.96200001239776611" />
                                            <RotateTransform Angle="0" CenterX="0.47499999403953552"
                                                             CenterY="0.96200001239776611" />
                                            <TranslateTransform X="0.015" Y="-0.048" />
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop
                                                Color="Black"
                                                Offset="0" />
                                            <GradientStop
                                                Color="Transparent"
                                                Offset="0.9888889789581299" />
                                        </GradientStopCollection>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Path.Fill>
                        </Path>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" Width="46" Margin="0"
                                          Height="26" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ChartType Title Style -->
    <Style x:Key="ChooseChartTypeTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Margin" Value="0,10,6,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>

    <!-- ******************** Selected Stock Symbol / Name / LU ********************** -->

    <!-- Stock Name Style -->
    <Style x:Key="StockDetailsSymbolTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFDEDEDE" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>

    <!-- Stock Trade Price Style -->
    <Style x:Key="StockDetailsTradeAmountTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFDEDEDE" />
        <Setter Property="FontSize" Value="48" />
        <Setter Property="Margin" Value="0,3,10,0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>

    <!-- Stock Percentage Change Style -->
    <Style x:Key="StockDetailsChangeTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource GreenText}" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>

    <!-- Last Update Text Style -->
    <Style x:Key="StockDetailsLastUpdateTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFDEDEDE" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,4,0,0" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>


    <Style x:Key="DataLogTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFA1A1A1" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Arial" />
    </Style>

    <!-- ******************** Selected Stock Details ********************** -->

    <!-- Grid: Data Cell -->
    <Style x:Key="StockDetailsDataTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFA1A1A1" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Margin" Value="0,0,20,0" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Height" Value="21" />
    </Style>

    <!-- Grid: Title Cell -->
    <Style x:Key="StockDetailsLabelTextBlock" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource StockDetailsDataTextBlock}">
        <Setter Property="Foreground" Value="#FFE0E0E0" />
    </Style>

    <!-- Stock Template Text-->
    <Style x:Key="StockTemplateText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>


    <!-- ******************** Chart Titles / Labels ********************** -->

    <!-- Title Textblock Style -->
    <Style x:Key="ChartTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Margin" Value="10,3,10,0" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!-- Chart Titles Grid Style -->
    <Style x:Key="ChartTitleGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#7F333333" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <!-- ******************** ZoomBar Styles ********************** -->
    <!-- Zoombar Style -->
    <Style x:Key="XamZoombarStyle1" TargetType="{x:Type ig:XamZoombar}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ig:XamZoombar}">
                    <Grid>
                        <Grid.Resources>

                            <LinearGradientBrush x:Key="BaseOverlayBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#ccffffff" Offset="0.3700000047683716" />
                                        <GradientStop Color="#a5ffffff" Offset="0.6299999952316284" />
                                        <GradientStop Color="#72ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="BaseInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#99FFFFFF" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="LightInnerStrokeBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#58ffffff" Offset="0" />
                                        <GradientStop Color="#a5ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="MediumInnerStrokeBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FF1F1F1F" Offset="0" />
                                        <GradientStop Color="#FF666666" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="DarkInnerStrokeBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFd7dce1" Offset="0" />
                                        <GradientStop Color="#FF718597" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="StrokeBrush" Opacity="0.38" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                                        <GradientStop Color="#FF718597" Offset="0.375" />
                                        <GradientStop Color="#00617584" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScrollElementBackgroundBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFcccccc" Offset="0" />
                                        <GradientStop Color="#FF989898" Offset="0.6678000092506409" />
                                        <GradientStop Color="#FF6A6A6A" Offset="0.9944000244140625" />
                                        <GradientStop Color="#FF6a6a6a" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="RootBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#33000000" Offset="0" />
                                <GradientStop Color="#33000000" Offset="1" />
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="ThumbBackgroundBrush" Color="#00000000" />
                            <LinearGradientBrush x:Key="ThumbElementBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#00ffffff" Offset="0" />
                                        <GradientStop Color="Black" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScaleElementBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FF454545" Offset="0" />
                                        <GradientStop Color="Black" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScaleElementOuterBorderBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFDCE0E4" Offset="0" />
                                        <GradientStop Color="#FFB3BDC6" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScaleElementInnerBorderBrush" EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="1" />
                                        <GradientStop Color="#00ffffff" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalBaseBrush" EndPoint="1,0" StartPoint="0,0">
                                <GradientStop Color="#FFF4F6F7" Offset="1" />
                                <GradientStop Color="#FFF0F4F7" Offset="0.604" />
                                <GradientStop Color="#FFDFE3E6" Offset="0" />
                                <GradientStop Color="#FFE9EEF4" Offset="0.38" />
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalBaseOverlayBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#ccffffff" Offset="0.3700000047683716" />
                                        <GradientStop Color="#a5ffffff" Offset="0.6299999952316284" />
                                        <GradientStop Color="#72ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalBaseInnerBorderBrush" EndPoint="0,0" StartPoint="1 ,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="1" />
                                        <GradientStop Color="#FFffffff" Offset="0.5" />
                                        <GradientStop Color="#00ffffff" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalLightInnerStrokeBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#58ffffff" Offset="0" />
                                        <GradientStop Color="#a5ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalMediumInnerStrokeBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFf4f5f7" Offset="0" />
                                        <GradientStop Color="#FF849aaa" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalDarkInnerStrokeBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFd7dce1" Offset="0" />
                                        <GradientStop Color="#FF718597" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalStrokeBrush" Opacity="0.38" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                                        <GradientStop Color="#FF718597" Offset="0.375" />
                                        <GradientStop Color="#FF617584" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScrollElementBackgroundBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFcccccc" Offset="0" />
                                        <GradientStop Color="#FF989898" Offset="0.6678000092506409" />
                                        <GradientStop Color="#FF6A6A6A" Offset="0.9944000244140625" />
                                        <GradientStop Color="#FF6a6a6a" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalRootBackgroundBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFc8cfd5" Offset="0" />
                                        <GradientStop Color="#FF5a6978" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalThumbBackgroundBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#d8ffffff" Offset="0" />
                                        <GradientStop Color="#3fffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalThumbElementBorderBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#00ffffff" Offset="1" />
                                        <GradientStop Color="#ffffffff" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScaleElementBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFFBFBFC" Offset=".7" />
                                        <GradientStop Color="#FFE0E3E6" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScaleElementOuterBorderBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFDCE0E4" Offset="1" />
                                        <GradientStop Color="#FFC1C9D0" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScaleElementInnerBorderBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#00ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <Style x:Key="ZoomBarScrollBtnRight" TargetType="{x:Type ContentControl}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused" />
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="MouseOver" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="Pressed" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border3"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                          Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border3"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>4,0,0,4</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                              Duration="00:00:00.0010000"
                                                                                              Storyboard.TargetName="border3"
                                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="00:00:00"
                                                                                         Value="#FF161616" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>4,0,0,4</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(Border.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>4,0,0,4</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                              Duration="00:00:00.0010000"
                                                                                              Storyboard.TargetName="border"
                                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="00:00:00"
                                                                                         Value="#FF545454" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border2"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>4,0,0,4</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>4,0,0,4</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border2"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>4,0,0,4</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                              Duration="00:00:00.0010000"
                                                                                              Storyboard.TargetName="border2"
                                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="00:00:00"
                                                                                         Value="#FF545454" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid Margin="0">
                                                    <Border x:Name="border" Opacity="0" Background="Black"
                                                            BorderBrush="{StaticResource StrokeBrush}"
                                                            BorderThickness="0">
                                                        <Border x:Name="border2" Opacity="0" Background="Black"
                                                                BorderThickness="0" />
                                                    </Border>
                                                    <Border x:Name="border3" BorderBrush="{StaticResource StrokeBrush}"
                                                            BorderThickness="0" Opacity="0" Background="Black">
                                                        <Border x:Name="border4" Opacity="0"
                                                                Background="{StaticResource MediumInnerStrokeBrush}"
                                                                BorderThickness="0" />
                                                    </Border>
                                                    <Border x:Name="border1" Margin="1" Opacity="0" BorderThickness="0" />
                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="5,3" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                            <Style x:Key="ZoomBarScrollBtnLeft" TargetType="{x:Type ContentControl}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused" />
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="MouseOver" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="Pressed">
                                                                <Storyboard />
                                                            </VisualTransition>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                          Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border3"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                              Duration="00:00:00.0010000"
                                                                                              Storyboard.TargetName="border3"
                                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="00:00:00"
                                                                                         Value="#FF161616" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border3"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>0,4,4,0</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(Border.BorderThickness)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0,0,0,1</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>0,4,4,0</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>0,4,4,0</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                              Duration="00:00:00.0010000"
                                                                                              Storyboard.TargetName="border"
                                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="00:00:00"
                                                                                         Value="#FF545454" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border2"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                              Duration="00:00:00.0010000"
                                                                                              Storyboard.TargetName="border"
                                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="00:00:00"
                                                                                         Value="#FF1A1A1A" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                              Duration="00:00:00.0010000"
                                                                                              Storyboard.TargetName="border2"
                                                                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="00:00:00"
                                                                                         Value="#FF545454" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border2"
                                                                                               Storyboard.TargetProperty="(Border.CornerRadius)">
                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <CornerRadius>0,4,4,0</CornerRadius>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid Margin="0">
                                                    <Border x:Name="border" Opacity="0" Background="Black"
                                                            BorderThickness="0" CornerRadius="0,4,4,0">
                                                        <Border x:Name="border2" Opacity="0" Background="Black"
                                                                BorderThickness="0" CornerRadius="0,4,4,0" />
                                                    </Border>
                                                    <Border x:Name="border3" Opacity="0" BorderThickness="0"
                                                            Background="Black">
                                                        <Border x:Name="border4" Opacity="0"
                                                                Background="{StaticResource MediumInnerStrokeBrush}"
                                                                BorderThickness="0" />
                                                    </Border>
                                                    <Border x:Name="border1" Margin="1,1,1,1" Opacity="0"
                                                            BorderThickness="0" />
                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="5,3" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                            <Style x:Key="ZoomBarScrollBtnTop" TargetType="{x:Type ContentControl}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused" />
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="MouseOver" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="Pressed" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border2"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid Margin="2,2,2,0">
                                                    <Border x:Name="border" Opacity="0"
                                                            Background="{StaticResource ScaleElementBrush}"
                                                            BorderBrush="{StaticResource StrokeBrush}"
                                                            BorderThickness="1" CornerRadius="2,2,0,0">
                                                        <Border x:Name="border2" Opacity="0"
                                                                Background="{StaticResource MediumInnerStrokeBrush}"
                                                                BorderThickness="1" CornerRadius="2,2,0,0" />
                                                    </Border>
                                                    <Border x:Name="border1" Margin="1" Opacity="0"
                                                            BorderBrush="{StaticResource BaseInnerBorderBrush}"
                                                            BorderThickness="1" CornerRadius="2,2,0,0" />
                                                    <ContentPresenter
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="3,5" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                            <Style x:Key="ZoomBarScrollBtnBottom" TargetType="{x:Type ContentControl}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused" />
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="MouseOver" />
                                                            <VisualTransition
                                                                GeneratedDuration="00:00:00.1000000" To="Pressed" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border1"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="border2"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid Margin="2,0,2,2">
                                                    <Border x:Name="border" Opacity="0"
                                                            Background="{StaticResource ScaleElementBrush}"
                                                            BorderBrush="{StaticResource StrokeBrush}"
                                                            BorderThickness="1" CornerRadius="0,0,2,2">
                                                        <Border x:Name="border2" Opacity="0"
                                                                Background="{StaticResource MediumInnerStrokeBrush}"
                                                                BorderThickness="1" CornerRadius="0,0,2,2" />
                                                    </Border>
                                                    <Border x:Name="border1" Margin="1,1,100,1" Opacity="0"
                                                            BorderBrush="{StaticResource BaseInnerBorderBrush}"
                                                            BorderThickness="1" CornerRadius="0,0,2,2" />
                                                    <ContentPresenter
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="3,5" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                        </Grid.Resources>
                        <Canvas x:Name="HorizontalRootCanvasElement" Height="88">
                            <ContentControl x:Name="HorizontalThumbElement" HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch" Cursor="Hand"
                                            Style="{TemplateBinding HorizontalThumbStyle}" UseLayoutRounding="False"
                                            Height="88">
                                <Grid Height="88">
                                    <Rectangle Height="88" Margin="0,0" Fill="#00000000" Stroke="#00000000" />
                                </Grid>
                            </ContentControl>
                            <Grid x:Name="HorizontalScrollbarElement">
                                <Border BorderThickness="0" IsHitTestVisible="False">
                                    <Border BorderThickness="0" />
                                </Border>
                                <Grid Height="88">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="HorizontalTrackElement" Margin="0,2,0,1" Grid.Column="1"
                                            BorderThickness="1,0,1,1" CornerRadius="2" IsHitTestVisible="False">
                                        <Border Margin="0,1,0,0" BorderThickness="1" CornerRadius="2"
                                                BorderBrush="#19000000">
                                            <Border BorderThickness="1" CornerRadius="0,0,1,1" BorderBrush="#00000000" />
                                        </Border>
                                    </Border>
                                    <Grid Cursor="Hand" Height="88">
                                        <ContentControl x:Name="HorizontalScrollLeftElement"
                                                        Style="{StaticResource ZoomBarScrollBtnLeft}" Width="20"
                                                        Margin="0">
                                            <Path
                                                Margin="0,0,1,0"
                                                HorizontalAlignment="Center"
                                                Height="14"
                                                Width="7"
                                                Stretch="Fill"
                                                Opacity="1"
                                                Data="M 7,40 C7,40 14,46 14,46 14,46 7,52 7,52 7,52 7,40 7,40 z"
                                                Stroke="#666666"
                                                StrokeThickness="1"
                                                Fill="#ffffff" UseLayoutRounding="False" d:LayoutOverrides="GridBox"
                                                RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="-1" />
                                                        <SkewTransform />
                                                        <RotateTransform Angle="-7.0164774631945124E-15" />
                                                        <TranslateTransform />
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </ContentControl>
                                    </Grid>
                                    <Grid Cursor="Hand" Grid.Column="2">
                                        <ContentControl x:Name="HorizontalScrollRightElement"
                                                        Style="{StaticResource ZoomBarScrollBtnRight}" Width="20">
                                            <Path
                                                Margin="1,0,0,0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Height="14"
                                                Width="7"
                                                Stretch="Fill"
                                                Opacity="1"
                                                Data="M 7,40 C7,40 14,46 14,46 14,46 7,52 7,52 7,52 7,40 7,40 z"
                                                Stroke="#666666"
                                                StrokeThickness="1"
                                                Fill="#ffffff" UseLayoutRounding="False" d:LayoutOverrides="GridBox" />
                                        </ContentControl>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="HorizontalPreviewElement" IsHitTestVisible="False">
                                    <ContentPresenter Content="{TemplateBinding HorizontalPreviewContent}" />
                                </Grid>
                            </Grid>
                            <ContentControl x:Name="HorizontalScaleLeftElement" HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch" Cursor="SizeWE"
                                            Style="{TemplateBinding HorizontalScaleLeftStyle}" Width="33" Height="88"
                                            d:IsHidden="True">
                                <Grid d:LayoutOverrides="Height" RenderTransformOrigin="0.5,0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Rectangle Fill="#99000000" HorizontalAlignment="Left" IsHitTestVisible="False"
                                               StrokeThickness="0" />
                                    <Rectangle Fill="#FF7C7C7C" Stroke="#666666" Height="88" Width="3"
                                               HorizontalAlignment="Left" Margin="0" />
                                    <Path
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="24"
                                        Width="16"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M19,50.75 C19,54.75 15,58 11,58 C11,58 3,58 3,58 C3,58 3,34 3,34 C3,34 11,34 11,34 C15,34 19,36.875 19,40.875 C19,40.875 19,50.75 19,50.75 z"
                                        Fill="#666666" UseLayoutRounding="False" d:LayoutOverrides="GridBox"
                                        Margin="2,32,0,0" />
                                    <Path
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="22"
                                        Width="15.062"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M18.0625,50 C18.0625,54 15,57 11,57 C11,57 3,57 3,57 C3,57 3,35 3,35 C3,35 11,35 11,35 C15,35 18.0625,38 18.0625,42 C18.0625,42 18.0625,50 18.0625,50 z"
                                        UseLayoutRounding="False" d:LayoutOverrides="GridBox" Margin="1.997,33,0,0">
                                        <Path.Fill>
                                            <LinearGradientBrush
                                                StartPoint="0.8,0.8181818181818182"
                                                EndPoint="0.016666666666666666,0.1590909090909091">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop
                                                            Color="#FF999999"
                                                            Offset="0" />
                                                        <GradientStop
                                                            Color="#FF666666"
                                                            Offset="0.9944440126419067" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="12"
                                        Width="7"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M 7,40 C7,40 14,46 14,46 14,46 7,52 7,52 7,52 7,40 7,40 z"
                                        Stroke="#666666"
                                        StrokeThickness="1"
                                        Fill="#ffffff" UseLayoutRounding="False" d:LayoutOverrides="GridBox"
                                        Margin="6.204,37.5,0,0" />
                                </Grid>
                            </ContentControl>
                            <ContentControl x:Name="HorizontalScaleRightElement" HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch" Cursor="SizeWE"
                                            Style="{TemplateBinding HorizontalScaleRightStyle}" Width="33" Height="88"
                                            d:IsHidden="True">


                                <Grid Height="88">
                                    <Rectangle Fill="#99000000" HorizontalAlignment="Left" IsHitTestVisible="False"
                                               StrokeThickness="0" />
                                    <Rectangle Fill="#FF7C7C7C" Stroke="#666666" Height="88" HorizontalAlignment="Left"
                                               Margin="0" Width="3" />
                                    <Path

                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="24"
                                        Width="16"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M19,50.75 C19,54.75 15,58 11,58 C11,58 3,58 3,58 C3,58 3,34 3,34 C3,34 11,34 11,34 C15,34 19,36.875 19,40.875 C19,40.875 19,50.75 19,50.75 z"
                                        Fill="#666666" UseLayoutRounding="False" d:LayoutOverrides="GridBox" />
                                    <Path
                                        Margin="2,33,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="22"
                                        Width="15.062"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M18.0625,50 C18.0625,54 15,57 11,57 C11,57 3,57 3,57 C3,57 3,35 3,35 C3,35 11,35 11,35 C15,35 18.0625,38 18.0625,42 C18.0625,42 18.0625,50 18.0625,50 z"
                                        UseLayoutRounding="False" d:LayoutOverrides="GridBox">
                                        <Path.Fill>
                                            <LinearGradientBrush
                                                StartPoint="0.8,0.8181818181818182"
                                                EndPoint="0.016666666666666666,0.1590909090909091">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop
                                                            Color="#FF999999"
                                                            Offset="0" />
                                                        <GradientStop
                                                            Color="#FF666666"
                                                            Offset="0.9944440126419067" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path
                                        Margin="6.204,37.5,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="12"
                                        Width="7"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M 7,40 C7,40 14,46 14,46 14,46 7,52 7,52 7,52 7,40 7,40 z"
                                        Stroke="#666666"
                                        StrokeThickness="1"
                                        Fill="#ffffff" UseLayoutRounding="False" d:LayoutOverrides="GridBox" />
                                </Grid>
                            </ContentControl>
                        </Canvas>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Zoombar Style -->
    <Style x:Key="XamZoombarStyle2" TargetType="{x:Type ig:XamZoombar}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ig:XamZoombar}">
                    <Grid>
                        <Grid.Resources>

                            <LinearGradientBrush x:Key="BaseOverlayBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#ccffffff" Offset="0.3700000047683716" />
                                        <GradientStop Color="#a5ffffff" Offset="0.6299999952316284" />
                                        <GradientStop Color="#72ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="BaseInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#99FFFFFF" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="LightInnerStrokeBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#58ffffff" Offset="0" />
                                        <GradientStop Color="#a5ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="MediumInnerStrokeBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FF1F1F1F" Offset="0" />
                                        <GradientStop Color="#FF666666" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="DarkInnerStrokeBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFd7dce1" Offset="0" />
                                        <GradientStop Color="#FF718597" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="StrokeBrush" Opacity="0.38" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                                        <GradientStop Color="#FF718597" Offset="0.375" />
                                        <GradientStop Color="#00617584" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScrollElementBackgroundBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFcccccc" Offset="0" />
                                        <GradientStop Color="#FF989898" Offset="0.6678000092506409" />
                                        <GradientStop Color="#FF6A6A6A" Offset="0.9944000244140625" />
                                        <GradientStop Color="#FF6a6a6a" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="RootBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#33000000" Offset="0" />
                                <GradientStop Color="#33000000" Offset="1" />
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="ThumbBackgroundBrush" Color="#00000000" />
                            <LinearGradientBrush x:Key="ThumbElementBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#00ffffff" Offset="0" />
                                        <GradientStop Color="Black" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScaleElementBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FF454545" Offset="0" />
                                        <GradientStop Color="Black" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScaleElementOuterBorderBrush" EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFDCE0E4" Offset="0" />
                                        <GradientStop Color="#FFB3BDC6" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="ScaleElementInnerBorderBrush" EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="1" />
                                        <GradientStop Color="#00ffffff" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalBaseBrush" EndPoint="1,0" StartPoint="0,0">
                                <GradientStop Color="#FFF4F6F7" Offset="1" />
                                <GradientStop Color="#FFF0F4F7" Offset="0.604" />
                                <GradientStop Color="#FFDFE3E6" Offset="0" />
                                <GradientStop Color="#FFE9EEF4" Offset="0.38" />
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalBaseOverlayBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#ccffffff" Offset="0.3700000047683716" />
                                        <GradientStop Color="#a5ffffff" Offset="0.6299999952316284" />
                                        <GradientStop Color="#72ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalBaseInnerBorderBrush" EndPoint="0,0" StartPoint="1 ,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="1" />
                                        <GradientStop Color="#FFffffff" Offset="0.5" />
                                        <GradientStop Color="#00ffffff" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalLightInnerStrokeBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#58ffffff" Offset="0" />
                                        <GradientStop Color="#a5ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalMediumInnerStrokeBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFf4f5f7" Offset="0" />
                                        <GradientStop Color="#FF849aaa" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalDarkInnerStrokeBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFd7dce1" Offset="0" />
                                        <GradientStop Color="#FF718597" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalStrokeBrush" Opacity="0.38" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                                        <GradientStop Color="#FF718597" Offset="0.375" />
                                        <GradientStop Color="#FF617584" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScrollElementBackgroundBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFcccccc" Offset="0" />
                                        <GradientStop Color="#FF989898" Offset="0.6678000092506409" />
                                        <GradientStop Color="#FF6A6A6A" Offset="0.9944000244140625" />
                                        <GradientStop Color="#FF6a6a6a" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalRootBackgroundBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFc8cfd5" Offset="0" />
                                        <GradientStop Color="#FF5a6978" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalThumbBackgroundBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#d8ffffff" Offset="0" />
                                        <GradientStop Color="#3fffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalThumbElementBorderBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#00ffffff" Offset="1" />
                                        <GradientStop Color="#ffffffff" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScaleElementBrush" EndPoint="0,0" StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFFBFBFC" Offset=".7" />
                                        <GradientStop Color="#FFE0E3E6" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScaleElementOuterBorderBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFDCE0E4" Offset="1" />
                                        <GradientStop Color="#FFC1C9D0" Offset="0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <LinearGradientBrush x:Key="VerticalScaleElementInnerBorderBrush" EndPoint="0,0"
                                                 StartPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#FFffffff" Offset="0" />
                                        <GradientStop Color="#00ffffff" Offset="1" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                            <Style x:Key="ZoomBarScrollBtnRight" TargetType="{x:Type ContentControl}">

                                <Setter Property="Padding" Value="5,3" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                            <Style x:Key="ZoomBarScrollBtnLeft" TargetType="{x:Type ContentControl}">

                                <Setter Property="Padding" Value="5,3" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                            <Style x:Key="ZoomBarScrollBtnTop" TargetType="{x:Type ContentControl}">

                                <Setter Property="Padding" Value="3,5" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                            <Style x:Key="ZoomBarScrollBtnBottom" TargetType="{x:Type ContentControl}">

                                <Setter Property="Padding" Value="3,5" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                        </Grid.Resources>


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">
            <Grid x:Name="Grid">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#E5000000" Offset="0" />
                        <GradientStop Color="#B2000000" Offset="1" />
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="Black" Grid.Row="1" />
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}" Grid.Column="0"
                                        Margin="{TemplateBinding Padding}" Grid.Row="0" />
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                           Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                           Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarVert}"
                           Background="#FF181818" />
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                           Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                           Orientation="Horizontal" Grid.Row="1"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportWidth}" Background="#FF181818"
                           Style="{DynamicResource ScrollBarHoriz}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="#008D8D8D" RadiusY="2" RadiusX="2" />
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               SnapsToDevicePixels="true"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
                                                               Visibility="Collapsed" />
                        <Path x:Name="path1" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FF8D8D8D" Margin="4.5,6.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                                    <SkewTransform AngleY="0" AngleX="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path x:Name="path" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FFC8C8C8" Opacity="0" Margin="4.5,6.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                                    <SkewTransform AngleY="0" AngleX="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsDragging}"
                                                               SnapsToDevicePixels="true"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
                                                               Visibility="Collapsed" />
                        <Rectangle Fill="#FF5B5B5B" Margin="2" Stroke="{x:Null}" RadiusX="2" RadiusY="2"
                                   StrokeThickness="2" />
                        <Rectangle x:Name="rectangle" Fill="#FF939393" Margin="2" Stroke="{x:Null}" RadiusX="2"
                                   RadiusY="2" StrokeThickness="2" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="over">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="over">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="path1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="#008D8D8D" RadiusY="2" RadiusX="2" Margin="1" />
                        <Rectangle x:Name="over" Fill="#E5000000" RadiusY="1" RadiusX="1" Margin="1" Opacity="0" />
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               SnapsToDevicePixels="true"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
                                                               Visibility="Collapsed" />
                        <Path x:Name="path1" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FFBFBFBF" Margin="4.5,6.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                                    <SkewTransform AngleY="0" AngleX="0" />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarVertical" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="17" />
        <Setter Property="MinWidth" Value="17" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#FF181818">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Stroke="#00000000" StrokeThickness="0" RadiusX="0" RadiusY="0"
                                   Fill="{DynamicResource VerticalScrollBarBackground}" Grid.RowSpan="3" Grid.Row="0" />
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{DynamicResource RepeatButtonStyle}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
                                      RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
                                       Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Style="{DynamicResource RepeatButtonStyle}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
                                      Background="{x:Null}" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg"
                                    Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="17" />
                <Setter Property="MinHeight" Value="17" />
                <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{x:Null}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Stroke="#00000000" StrokeThickness="0" RadiusX="0" RadiusY="0"
                                           Grid.RowSpan="5" Fill="#FF181818" Grid.ColumnSpan="3" />
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource RepeatButtonStyle}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow" />
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"
                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource RepeatButtonStyle}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"
                                              RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg"
                                            Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollBarVert" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{DynamicResource RepeatButtonStyle1}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" />
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
                                       Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Style="{StaticResource ScrollBarButton}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
                                      Background="{x:Null}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg"
                                    Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height"
                        Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
                        Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow" />
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"
                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg"
                                            Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RepeatButtonStyle1" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="#008D8D8D" RadiusY="2" RadiusX="2" />
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               SnapsToDevicePixels="true"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
                                                               Visibility="Collapsed" />
                        <Path x:Name="path1" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FF8D8D8D" />
                        <Path x:Name="path" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FFC8C8C8" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarHoriz" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
        <!--<Setter Property="Orientation" Value="Horizontal"/>-->
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" />
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
                                       Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Style="{StaticResource ScrollBarButton}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg"
                                    Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height"
                        Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
                        Value="{StaticResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#FF181818">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid" />
                                        <VisualState x:Name="InvalidFocused" />
                                        <VisualState x:Name="InvalidUnfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource RepeatButtonStyle2}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow" />
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"
                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource ScrollBarButton3}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg"
                                            Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RepeatButtonStyle2" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="#008D8D8D" RadiusY="2" RadiusX="2" />
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               SnapsToDevicePixels="true"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
                                                               Visibility="Collapsed" />
                        <Path x:Name="path1" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FF8D8D8D" Margin="4.5,6.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                                    <SkewTransform AngleY="0" AngleX="0" />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path x:Name="path" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FFC8C8C8" Opacity="0" Margin="4.5,6.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                                    <SkewTransform AngleY="0" AngleX="0" />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarButton3" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="#008D8D8D" RadiusY="2" RadiusX="2" />
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               SnapsToDevicePixels="true"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"
                                                               Visibility="Collapsed" />
                        <Path x:Name="path1" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FF8D8D8D" Margin="4.5,6.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                                    <SkewTransform AngleY="0" AngleX="0" />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path x:Name="path" Stretch="Uniform" Height="4" Width="8"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Fill="#FFC8C8C8" Opacity="0" Margin="4.5,6.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1" ScaleX="1" />
                                    <SkewTransform AngleY="0" AngleX="0" />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Scrollviewer Style-->
    <Style x:Key="ScrollViewerMainView" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="#FF0E0E0E" Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Grid.Column="0"
                                                Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Style="{DynamicResource ScrollBarVertical}" Width="Auto" Background="{x:Null}"
                                   Margin="0" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow"
                                   Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                   Orientation="Horizontal" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Style="{DynamicResource ScrollBarVertical}" Background="{x:Null}" Margin="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ScrollViewerMainView}" />

    <!-- Main Scrollbars-->
    <Style x:Key="ScrollBarHorizontal" TargetType="{x:Type ScrollBar}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="17" />
        <Setter Property="MinWidth" Value="17" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#FF181818">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition
                                MaxHeight="{StaticResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{DynamicResource RepeatButtonStyle}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
                                      RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
                                       Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Style="{DynamicResource RepeatButtonStyle}"
                                      Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
                                      Background="{x:Null}" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg"
                                    Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="17" />
                <Setter Property="MinHeight" Value="17" />
                <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{x:Null}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{StaticResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Stroke="#00000000" StrokeThickness="0" RadiusX="0" RadiusY="0"
                                           Grid.RowSpan="5" Fill="#FF181818" Grid.ColumnSpan="3" />
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource RepeatButtonStyle}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow" />
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"
                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource RepeatButtonStyle}"
                                              Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"
                                              RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg"
                                            Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="RepeatButtonControlTemplate1" TargetType="{x:Type RepeatButton}">
        <Rectangle Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Fill="#FF181818" />
    </ControlTemplate>
    <ControlTemplate x:Key="RepeatButtonControlTemplate2" TargetType="{x:Type RepeatButton}">
        <Rectangle Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Fill="Black">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Rectangle>
    </ControlTemplate>
    <Style x:Key="ScrollBarButton2" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                           RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                           RenderPressed="{TemplateBinding IsPressed}"
                                                           SnapsToDevicePixels="true"
                                                           Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb2" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                           RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                           RenderPressed="{TemplateBinding IsDragging}"
                                                           SnapsToDevicePixels="true"
                                                           Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Heatmap View Styles-->
    <Style x:Key="TreemapStyle"
           TargetType="ig:XamTreemap">
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>


    <Style x:Key="TreemapMarketNodeStyle"
           TargetType="ig:TreemapNode">
        <Setter Property="Fill" Value="{StaticResource GreyArrow_over}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:TreemapNode">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Fill}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="ReadOnly" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock HorizontalAlignment="Center" Text="{TemplateBinding Text}" TextWrapping="Wrap"
                                       FontFamily="Arial"
                                       Foreground="#ccc" FontWeight="Bold" Margin="2" FontSize="12" />
                            <ig:NodesPanel x:Name="NodesPanel" Background="Transparent" Grid.Row="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreemapSectorNodeStyle"
           TargetType="ig:TreemapNode">
        <Setter Property="Fill" Value="{StaticResource GreyButton_Normal}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:TreemapNode">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Fill}"
                            ToolTipService.InitialShowDelay="0">

                        <Border.ToolTip>
                            <ToolTip Placement="Right">
                                <ToolTip.Template>
                                    <ControlTemplate>
                                        <Border CornerRadius="4" Background="#CC000000" BorderThickness="1">
                                            <Border.Effect>
                                                <DropShadowEffect BlurRadius="10" Opacity="0.6" />
                                            </Border.Effect>
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.507,0.042" StartPoint="0.509,1.047">
                                                    <GradientStop Color="#9900CCFF" Offset="0.605" />
                                                    <GradientStop Color="#FF00CCFF" Offset="0.972" />
                                                    <GradientStop Color="#3300CCFF" Offset="0.028" />
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Grid Margin="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Column="0"
                                                           Grid.ColumnSpan="2"
                                                           Grid.Row="0"
                                                           Text="{Binding Description}"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           FontWeight="Bold" />

                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="1"
                                                           Text="{Binding Strings.Change, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="2"
                                                           Text="{Binding Strings.Market_Cap, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="3"
                                                           Text="{Binding Strings.PE, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="4"
                                                           Text="{Binding Strings.ROE, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="5"
                                                           Text="{Binding Strings.Div_Yield, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="6"
                                                           Text="{Binding Strings.Price_to_Book, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="7"
                                                           Text="{Binding Strings.Price_to_Free_Cash_Flow, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="8"
                                                           Text="{Binding Strings.Net_Profit_Margin, Source={StaticResource Strings}, Mode=OneTime}"
                                                           Foreground="{StaticResource TooltipTextBrush}" />

                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="1"
                                                           Text="{Binding ChangeValue, TargetNullValue=NA, StringFormat=\{0:0.00\%\}}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="2"
                                                           Text="{Binding MarketCap, TargetNullValue=NA}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="3"
                                                           Text="{Binding PEValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="4"
                                                           Text="{Binding ROEValue, TargetNullValue=NA, StringFormat=\{0:0.00\%\}}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="5"
                                                           Text="{Binding DivYieldValue, TargetNullValue=NA, StringFormat=\{0:0.00\%\}}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="6"
                                                           Text="{Binding PriceToBookValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="7"
                                                           Text="{Binding PriceToFreeCashFlowValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                                <TextBlock Grid.Column="1"
                                                           Grid.Row="8"
                                                           Text="{Binding NetProfitMarginValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right"
                                                           Foreground="{StaticResource TooltipTextBrush}" />
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToolTip.Template>
                            </ToolTip>
                        </Border.ToolTip>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock HorizontalAlignment="Left"
                                       Text="{TemplateBinding Text}"
                                       TextWrapping="Wrap"
                                       Foreground="Black"
                                       Margin="2" />
                            <ig:NodesPanel x:Name="NodesPanel"
                                           Grid.Row="1"
                                           Margin="0,0,0.5,0" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreemapIndustryNodeStyle"
           TargetType="ig:TreemapNode">
        <Setter Property="Fill" Value="{StaticResource BaseOverlayBrush}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="{StaticResource BaseColorBrush}" />
        <Setter Property="BorderThickness" Value="0.1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:TreemapNode">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Fill}"
                            ToolTipService.InitialShowDelay="0">

                        <Border.ToolTip>
                            <ToolTip Placement="Right">
                                <ToolTip.Template>
                                    <ControlTemplate>
                                        <Border CornerRadius="4" Background="#CC000000" BorderThickness="1">
                                            <Border.Effect>
                                                <DropShadowEffect BlurRadius="10" Opacity="0.6" />
                                            </Border.Effect>
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.507,0.042" StartPoint="0.509,1.047">
                                                    <GradientStop Color="#9900CCFF" Offset="0.605" />
                                                    <GradientStop Color="#FF00CCFF" Offset="0.972" />
                                                    <GradientStop Color="#3300CCFF" Offset="0.028" />
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Grid Margin="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Column="0"
                                                           Grid.ColumnSpan="2"
                                                           Grid.Row="0" Foreground="{StaticResource TooltipTextBrush}"
                                                           Text="{Binding Description}"
                                                           FontWeight="Bold" />

                                                <TextBlock Grid.Column="0"
                                                           Grid.Row="1" Foreground="{StaticResource TooltipTextBrush}"
                                                           Text="{Binding Strings.Change, Source={StaticResource Strings}, Mode=OneTime}" />
                                                <TextBlock Grid.Column="0"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="2"
                                                           Text="{Binding Strings.Market_Cap, Source={StaticResource Strings}, Mode=OneTime}" />
                                                <TextBlock Grid.Column="0"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="3"
                                                           Text="{Binding Strings.PE, Source={StaticResource Strings}, Mode=OneTime}" />
                                                <TextBlock Grid.Column="0"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="4"
                                                           Text="{Binding Strings.ROE, Source={StaticResource Strings}, Mode=OneTime}" />
                                                <TextBlock Grid.Column="0"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="5"
                                                           Text="{Binding Strings.Div_Yield, Source={StaticResource Strings}, Mode=OneTime}" />
                                                <TextBlock Grid.Column="0"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="6"
                                                           Text="{Binding Strings.Price_to_Book, Source={StaticResource Strings}, Mode=OneTime}" />
                                                <TextBlock Grid.Column="0"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="7"
                                                           Text="{Binding Strings.Price_to_Free_Cash_Flow, Source={StaticResource Strings}, Mode=OneTime}" />
                                                <TextBlock Grid.Column="0"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="8"
                                                           Text="{Binding Strings.Net_Profit_Margin, Source={StaticResource Strings}, Mode=OneTime}" />

                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="1"
                                                           Text="{Binding ChangeValue, TargetNullValue=NA, StringFormat=\{0:0.00\%\}}"
                                                           HorizontalAlignment="Right" />
                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="2"
                                                           Text="{Binding MarketCap, TargetNullValue=NA}"
                                                           HorizontalAlignment="Right" />
                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="3"
                                                           Text="{Binding PEValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right" />
                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="4"
                                                           Text="{Binding ROEValue, TargetNullValue=NA, StringFormat=\{0:0.00\%\}}"
                                                           HorizontalAlignment="Right" />
                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="5"
                                                           Text="{Binding DivYieldValue, TargetNullValue=NA, StringFormat=\{0:0.00\%\}}"
                                                           HorizontalAlignment="Right" />
                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="6"
                                                           Text="{Binding PriceToBookValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right" />
                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="7"
                                                           Text="{Binding PriceToFreeCashFlowValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right" />
                                                <TextBlock Grid.Column="1"
                                                           Foreground="{StaticResource TooltipTextBrush}"
                                                           Grid.Row="8"
                                                           Text="{Binding NetProfitMarginValue, TargetNullValue=NA, StringFormat=\{0:0.00\}}"
                                                           HorizontalAlignment="Right" />
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToolTip.Template>
                            </ToolTip>
                        </Border.ToolTip>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="ReadOnly" />
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="HighlightBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Border x:Name="HighlightBorder"
                                    BorderBrush="#FFD4DADE"
                                    BorderThickness="0.5"
                                    Visibility="Collapsed" />
                            <Border x:Name="SelectionBorder"
                                    Opacity="0.3"
                                    Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,1"
                                                         StartPoint="0,0">
                                        <GradientStop Color="Magenta"
                                                      Offset="0" />
                                        <GradientStop Color="LimeGreen"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ig:NodesPanel x:Name="NodesPanel" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Navigation Links Style -->
    <Style x:Key="NavigationLinks" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="Padding" Value="10 0 10 0" />
        <Setter Property="Margin" Value="5 0 0 0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="#FFB2B2B2" />
        <Setter Property="Foreground" Value="#FFB2B2B2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Height="25">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="normal"
                              Data="M-0.020833334,0.020911355 C-0.020833334,0.020911355 45.96875,2.8144154E-14 45.96875,2.8144154E-14 C45.96875,2.8144154E-14 45.989582,10.666667 46,16 C46,17.10457 45.104568,18 44,18 L2,18 C0.89543051,18 0,17.10457 0,16 C-0.0069444445,10.673637 -0.020833334,0.020911355 -0.020833334,0.020911355 z"
                              Fill="{StaticResource GreyButton_Normal}" Stretch="Fill" UseLayoutRounding="False" />
                        <Path x:Name="hover"
                              Data="M-0.020833334,0.020911355 C-0.020833334,0.020911355 45.96875,2.8144154E-14 45.96875,2.8144154E-14 C45.96875,2.8144154E-14 45.989582,10.666667 46,16 C46,17.10457 45.104568,18 44,18 L2,18 C0.89543051,18 0,17.10457 0,16 C-0.0069444445,10.673637 -0.020833334,0.020911355 -0.020833334,0.020911355 z"
                              Fill="{StaticResource GreyArrow_over}" Stretch="Fill" UseLayoutRounding="False"
                              Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsChecked" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid HorizontalAlignment="Stretch">
                        <Rectangle x:Name="Background" RadiusY="3" RadiusX="3" Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" Margin="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                    <GradientStop Color="#FF333333" Offset="0" />
                                    <GradientStop Color="#7F666666" Offset="0.4" />
                                    <GradientStop Color="#C6333333" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="BackgroundOverlay" Fill="#88cccccc" Opacity="0" RadiusY="3" RadiusX="3"
                                   Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}" Margin="0" />
                        <Rectangle x:Name="BackgroundOverlay2" Fill="#88cccccc" Opacity="0" RadiusY="3" RadiusX="3"
                                   Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}" Margin="0" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5"
                                   RadiusX="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" />
                        <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black"
                              HorizontalAlignment="Right" Margin="3,1,10,0" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}"
                                                           Background="{TemplateBinding Background}"
                                                           RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                           RenderPressed="{TemplateBinding IsPressed}"
                                                           RoundCorners="false" SnapsToDevicePixels="true"
                                                           Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black"
                              HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center" />
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                                                 MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                 MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border x:Name="DropDownBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect"
                                               Fill="{Binding Background, ElementName=DropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
            <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                    RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" />
            <TextBox x:Name="PART_EditableTextBox"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            <ToggleButton Grid.Column="1"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="RenderFocused" TargetName="Border" Value="true" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                <Setter Property="Background" Value="#FFF4F4F4" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                <Setter Property="Color" TargetName="Shdw" Value="#00000000" />
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />


        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="4,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition
                                MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Width="0" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="FocusedDropDown" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="1"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                                                             MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                             MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border x:Name="DropDownBorder" BorderThickness="1"
                                        Background="{DynamicResource AutoCompleteBoxBgBrush}" CornerRadius="0">
                                    <ScrollViewer x:Name="DropDownScrollViewer"
                                                  Template="{DynamicResource ScrollViewerControlTemplate1}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                                    Width="0">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=DropDownBorder}"
                                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}" BorderBrush="{x:Null}"
                                      Background="{x:Null}" />
                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,2,25,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                            <Setter Property="Color" TargetName="Shdw" Value="#00000000" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer"
                                 Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Foreground" Value="#ccc" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Height="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="fillColor">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="fillColor2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="FocusVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Fill="#ff555555"
                                   StrokeThickness="1" Visibility="Collapsed" />
                        <Rectangle x:Name="fillColor" Fill="#FF333333" IsHitTestVisible="False" Opacity="0" RadiusY="1"
                                   RadiusX="1" />
                        <Rectangle x:Name="fillColor2" Fill="#FF333333" IsHitTestVisible="False" Opacity="0"
                                   RadiusY="1" RadiusX="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="5,3,3,3" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _____________________ RecordScrollTipInfo DataTemplate________________________ -->
    <HierarchicalDataTemplate DataType="{x:Type igDp:RecordScrollTipInfo}" ItemsSource="{Binding Path=Children}">
        <HierarchicalDataTemplate.Resources>
            <DataTemplate DataType="{x:Type igDp:DataRecord}">
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter TextBlock.Foreground="#FFededed" VerticalAlignment="Center"
                                      Content="{Binding Path=FieldLayout.ScrollTipField.Label}" Margin="0,0,3,0" />
                    <!-- AS 5/31/07 BR22875 -->
                    <!--<TextBlock VerticalAlignment="Center" Text=":" Margin="0,0,2,0"/>-->
                    <TextBlock
                        VerticalAlignment="Center"
                        Text=":"
                        Margin="0,0,3,0"
                        Visibility="{Binding Path=FieldLayout.ScrollTipField.HasLabel, Converter={StaticResource BoolToVisConverter}}"
                        Foreground="{StaticResource HeaderNormalForegroundBrush}" />
                    <igDp:CellValuePresenter Padding="0" Margin="0" Field="{Binding Path=FieldLayout.ScrollTipField}" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type igDp:GroupByRecord}">
                <TextBlock Text="{Binding Path=Description}" Margin="0,3"
                           Foreground="{StaticResource HeaderNormalForegroundBrush}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type igDp:ExpandableFieldRecord}">
                <TextBlock Text="{Binding Path=Description}" Margin="0,3"
                           Foreground="{StaticResource HeaderNormalForegroundBrush}" />
            </DataTemplate>
            <!--SSP 6/7/08 BR33580 - Added SummaryRecord data template-->
            <DataTemplate DataType="{x:Type igDp:SummaryRecord}">
                <TextBlock Text="{Binding Path=Description}" Margin="0,3"
                           Foreground="{StaticResource HeaderNormalForegroundBrush}" />
            </DataTemplate>
        </HierarchicalDataTemplate.Resources>
        <ContentControl Content="{Binding Path=Record}" />
    </HierarchicalDataTemplate>


    <!-- _________________________ RecordScrollTip __________________________________________ -->
    <Style TargetType="{x:Type igDp:RecordScrollTip}">
        <!-- BasedOn="{StaticResource {x:Type ToolTip}}"> -->
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:RecordScrollTip}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="outerBorder" Opacity="1" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                CornerRadius="4" Background="#99000000" BorderThickness="1">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" />
                            </Border.Effect>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.507,0.042" StartPoint="0.509,1.047">
                                    <GradientStop Color="#9900CCFF" Offset="0.605" />
                                    <GradientStop Color="#FF00CCFF" Offset="0.972" />
                                    <GradientStop Color="#3300CCFF" Offset="0.028" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border
                            x:Name="innerBorder"
                            Opacity="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Margin="1,1,1,1"
                            CornerRadius="5.3999999999999995,5.3999999999999995,5.3999999999999995,5.3999999999999995"
                            BorderBrush="#ffffff"
                            BorderThickness="0" />
                        <ContentPresenter Margin="5,5,5,5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}"
                                     Value="True">
                            <Setter Property="CornerRadius" TargetName="outerBorder" Value="0" />
                            <Setter Property="CornerRadius" TargetName="innerBorder" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TreeView ItemsSource="{Binding}">
                        <TreeView.Style>
                            <Style TargetType="{x:Type TreeView}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="VerticalContentAlignment" Value="Top" />
                                <Setter Property="Foreground" Value="#767676" />
                            </Style>
                        </TreeView.Style>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="true" />
                                <Setter Property="Focusable" Value="false" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <ContentPresenter
                                                    ContentSource="Header"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    x:Name="PART_Header"
                                                    ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                    Content="{TemplateBinding HeaderedContentControl.Header}"
                                                    Grid.ColumnSpan="2" />
                                                <StackPanel Orientation="Horizontal" x:Name="ItemsHostPanel">
                                                    <FrameworkElement MinWidth="10" Height="0" />
                                                    <ItemsPresenter
                                                        x:Name="ItemsHost"
                                                        Grid.Column="1"
                                                        Grid.Row="1"
                                                        Grid.ColumnSpan="2" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SummaryInnerButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{DynamicResource CellItemNormalBorderBrush}" RadiusY="3" RadiusX="3" />
                        <Rectangle x:Name="hover" Fill="{DynamicResource ButtonNormalBorder}" RadiusY="3" RadiusX="3"
                                   Stroke="{x:Null}" StrokeThickness="0" Opacity="0" />
                        <TextBlock TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Foreground="#FFCCCCCC"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Text="{TemplateBinding Content}" Margin="5,0,5,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsDefaulted" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBackgroundHover, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBorder, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" />
        <Setter Property="Background"
                Value="{DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBackground, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" />
    </Style>


    <!-- _________________________ SummaryRecordHeaderPresenter ______________________________________ -->
    <Style TargetType="{x:Type igDp:SummaryRecordHeaderPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryRecordHeaderPresenter}">
                    <Border Background="{x:Null}" BorderBrush="{x:Null}">
                        <TextBlock
                            FontWeight="Bold"
                            Text="{Binding Path=SummaryRecord.SummaryRecordHeaderResolved, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Foreground="{TemplateBinding Foreground}"
                            Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Padding" Value="3,3,3,3" />
    </Style>


    <!-- _________________________ SummaryResultPresenter ______________________________________ -->
    <Style TargetType="{x:Type igDp:SummaryResultPresenter}">
        <Setter Property="Padding" Value="1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryResultPresenter}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        Padding="{TemplateBinding Padding}"
                        ToolTip="{Binding Path=SummaryResult.ToolTipResolved, RelativeSource={RelativeSource TemplatedParent}}">
                        <!-- SSP 3/19/10 - Optimizations
                            Changed the binding to bind to the new DisplayTextAsync instead of the DisplayText so we
                            don't force synchronous calculation of the summary if it's dirty. 
                        -->
                        <TextBlock
                            Text="{Binding Path=SummaryResult.DisplayTextAsync, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,2" />
    </Style>


    <!-- _________________________ SummaryCellPresenter ______________________________________ -->
    <Style TargetType="{x:Type igDp:SummaryCellPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryCellPresenter}">
                    <igDp:SummaryCellPresenterLayoutElement />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ Summary Button and PopUp __________________________________________ -->
    <Style TargetType="{x:Type igDp:SummaryButton}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle
                                Stroke="{x:Null}"
                                StrokeThickness="1"
                                RadiusX="2"
                                RadiusY="2"
                                Width="12"
                                Height="14"
                                Visibility="Visible"
                                x:Name="rectangle2"
                                Opacity="0"
                                Fill="{DynamicResource CellItemSelectedBorderBrush}" />
                            <Path
                                Margin="2,2,2,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stretch="Fill"
                                Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z"
                                Fill="{TemplateBinding Foreground}"
                                Width="5"
                                Height="7"
                                d:LayoutOverrides="Width, Height"
                                x:Name="path"
                                Stroke="{x:Null}" />
                        </Grid>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Placement="Bottom"
                            VerticalOffset="4"
                            HorizontalOffset="0"
                            IsOpen="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            StaysOpen="False"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                            SnapsToDevicePixels="True">
                            <!-- JJD 3/5/09 - TFS5971/BR32606 - set focus scope to true and navigation settings-->
                            <Border
                                CornerRadius="0"
                                x:Name="border"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabNavigation="Contained"
                                FocusManager.IsFocusScope="True"
                                BorderThickness="0.5" BorderBrush="#FF0D0D0D">
                                <Border.Background>
                                    <!-- Header Opacity Mask Brush -->
                                    <LinearGradientBrush EndPoint="0.5,-0.139" StartPoint="0.5,0.806">
                                        <GradientStop Offset="1" Color="#FF303030" />
                                        <GradientStop Color="#FF0D0D0D" />
                                    </LinearGradientBrush>


                                </Border.Background>
                                <Grid Width="Auto" Height="Auto">
                                    <Rectangle
                                        Stroke="{x:Null}"
                                        Margin="2,2,2,2"
                                        x:Name="InnerBackground"
                                        Visibility="Visible"
                                        RadiusX="3"
                                        RadiusY="3"
                                        Fill="{x:Null}" />
                                    <StackPanel Margin="5,5,5,5">
                                        <igDp:SummaryCalculatorSelectionControl x:Name="CalculatorSelectionControl"
                                                                                Field="{TemplateBinding Field}" />
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                                                    Margin="0,5,3,0">
                                            <Button
                                                x:Name="RowSummaryOkButton"
                                                IsDefault="True"
                                                Height="Auto"
                                                Margin="0,0,5,0"
                                                Style="{DynamicResource SummaryInnerButton}"
                                                Width="Auto" Content="Ok" />
                                            <!-- JJD 3/5/09 - TFS5971/BR32606 - set IsCancel to True-->
                                            <Button
                                                x:Name="RowSummaryCancelButton"
                                                Content="Cancel"
                                                IsCancel="True"
                                                Height="Auto"
                                                Style="{DynamicResource SummaryInnerButton}"
                                                Width="Auto" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="rectangle2" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelForeground}}" />
    </Style>


    <!-- _________________________ LabelPresenter __________________________________________ -->
    <Style TargetType="{x:Type igDp:LabelPresenter}">
        <Setter Property="Padding" Value="7,4" />
        <Setter Property="Background"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelBackground}}" />
        <Setter Property="LabelHighlight" Value="#FF161616" />
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="InnerBorderBrush"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelInnerBorder}}" />
        <Setter Property="OuterBorderBrush"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelOuterBorder}}" />
        <Setter Property="Foreground" Value="#FFD8D8D8" />
        <Setter Property="ToolTip" Value="{Binding Path=Field.ToolTip, RelativeSource={x:Static RelativeSource.Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:LabelPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbHighlightOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="highlight">
                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00" />
                                <SplineDoubleKeyFrame Value="1" KeyTime="00:00:00.1750000" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="fishHeadHighlight">
                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00" />
                                <SplineDoubleKeyFrame Value="1" KeyTime="00:00:00.1750000" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="sbHighlightOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="highlight">
                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00.25" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="fishHeadHighlight">
                                <SplineDoubleKeyFrame Value="0" KeyTime="00:00:00.25" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeIn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryButton"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedButton"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeOut">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryButton"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           FillBehavior="Stop">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedButton"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           FillBehavior="Stop">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeInFilterButton">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterButton"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeOutFilterButton">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterButton"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           FillBehavior="Stop">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="labelCntr" Margin="0" Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition x:Name="fishColumn" Width="0" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualState x:Name="Dragging" />
                                <VisualState x:Name="DragSource" />
                                <VisualState x:Name="NotDragging" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LocationStates">
                                <VisualState x:Name="CellArea" />
                                <VisualState x:Name="HeaderArea" />
                                <VisualState x:Name="FieldChooser" />
                                <VisualState x:Name="GroupByArea" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="Unselected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="SortAscending" />
                                <VisualState x:Name="SortDescending" />
                                <VisualState x:Name="Unsorted" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- Background Bar -->
                        <Border
                            Width="Auto"
                            Height="Auto"
                            RenderTransformOrigin="0.5,0.5"
                            CornerRadius="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelCornerRadius}}"
                            SnapsToDevicePixels="True"
                            x:Name="background" Background="#FF4D4D4D" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <!-- Highlight -->
                        <Border
                            x:Name="highlight"
                            Opacity="0"
                            Width="Auto"
                            Height="Auto"
                            CornerRadius="2,2,2,2"
                            Background="{TemplateBinding LabelHighlight}"
                            SnapsToDevicePixels="True" Margin="0,0,1,1" />
                        <Border
                            BorderBrush="{TemplateBinding OuterBorderBrush}"
                            BorderThickness="0"
                            CornerRadius="1.55015910897703"
                            Background="Transparent"
                            Margin="0,0,0,0"
                            x:Name="lineOuter"
                            Width="Auto"
                            Height="Auto"
                            SnapsToDevicePixels="True" />
                        <Border
                            BorderThickness="1"
                            CornerRadius="0.550159108977027"
                            Background="Transparent"
                            Margin="1,1,1,1"
                            x:Name="lineInner"
                            Width="Auto"
                            Height="Auto"
                            SnapsToDevicePixels="True" />
                        <Path x:Name="fishHead" SnapsToDevicePixels="True" Visibility="Collapsed" Grid.Column="1"
                              Margin="0,1" Stretch="Fill"
                              Data="M0,20 C0,20 3.8953004,10 3.8953004,10 3.8953004,10 0,0 0,0 0,0 0,20 0,20 z"
                              HorizontalAlignment="Left" Fill="#FF4D4D4D" />
                        <Path x:Name="fishHeadHighlight" SnapsToDevicePixels="True" Visibility="Collapsed"
                              Grid.Column="1" Margin="0,1" Stretch="Fill"
                              Data="M0,20 C0,20 3.8953004,10 3.8953004,10 3.8953004,10 0,0 0,0 0,0 0,20 0,20 z"
                              HorizontalAlignment="Left" Fill="{DynamicResource CellItemSelectedBackgroundBrush}" />
                        <Grid
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            x:Name="sortIndicatorAndLabel">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                x:Name="LabelContent"
                                Focusable="False"
                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                d:LayoutOverrides="Width, Height"
                                VerticalAlignment="Center" />
                            <igWindows:SortIndicator
                                x:Name="SortIndicator"
                                SortStatus="{TemplateBinding SortStatus}"
                                Visibility="Collapsed"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Width="Auto"
                                Grid.Column="1"
                                Margin="5,0,0,0" />
                            <!-- SSP 3/31/08 - Summaries Functionality -->
                            <igDp:SummaryButton
                                x:Name="SummaryButton"
                                Field="{TemplateBinding Field}"

                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Width="Auto"
                                Grid.Column="2"
                                Margin="5,0,0,0"
                                Opacity="0.4" Foreground="Black" />
                            <!-- JJD 1/06/09 - Filtering Functionality -->
                            <igDp:FilterButton
                                x:Name="FilterButton"
                                Field="{TemplateBinding Field}"
                                Visibility="{TemplateBinding FilterButtonVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Width="Auto"
                                Grid.Column="3"
                                Opacity="0.4"
                                Margin="5,0,0,0" />
                            <!-- JM 1/14/09 - Fixed Fields Functionality -->
                            <igDp:FixedFieldButton
                                x:Name="FixedButton"
                                Field="{TemplateBinding Field}"
                                Visibility="{TemplateBinding FixedButtonVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Width="Auto"
                                Grid.Column="4"
                                Margin="2,0,2,0"
                                Opacity="0.4" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HighlightAsPrimary" Value="true">
                            <Setter TargetName="highlight" Property="Opacity" Value="1" />
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="HorizontalAlignment" Value="Center">
                            <Setter Property="VerticalAlignment" TargetName="SortIndicator" Value="Top" />
                            <Setter Property="HorizontalAlignment" TargetName="SortIndicator" Value="Center" />
                            <Setter Property="Margin" TargetName="SortIndicator" Value="0,5,0,0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource sbHighlightOn}"
                                                 x:Name="sbHighlightOn_BeginStoryboard" />
                                <BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}"
                                                 x:Name="SigmaFadeIn_BeginStoryboard" />
                                <BeginStoryboard x:Name="SigmaFadeIn_BeginStoryboard1"
                                                 Storyboard="{StaticResource SigmaFadeIn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource sbHighlightOff}"
                                                 x:Name="sbHighlightOff_BeginStoryboard" />
                                <BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}"
                                                 x:Name="SigmaFadeOut_BeginStoryboard" />
                                <StopStoryboard BeginStoryboardName="SigmaFadeIn_BeginStoryboard1" />
                                <StopStoryboard BeginStoryboardName="sbHighlightOn_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="FilterButton" Property="HasActiveFilters" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FilterButton" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <Trigger SourceName="FilterButton" Property="HasActiveFilters" Value="True">
                            <Setter TargetName="FilterButton" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="SortStatus" Value="Ascending">
                            <Setter TargetName="highlight" Property="Opacity" Value="1" />
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1" />
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortStatus" Value="Descending">
                            <Setter TargetName="highlight" Property="Opacity" Value="1" />
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1" />
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="background" Property="CornerRadius" Value="2,0,0,2" />
                            <Setter TargetName="highlight" Property="CornerRadius" Value="2,0,0,2" />
                            <Setter TargetName="lineOuter" Property="CornerRadius" Value="2,0,0,2" />
                            <Setter TargetName="lineInner" Property="CornerRadius" Value="2,0,0,2" />
                            <Setter TargetName="background" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="lineOuter" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="lineInner" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="lineInner" Property="Margin" Value="1,1,0,1" />
                            <Setter TargetName="fishHead" Property="Visibility" Value="Visible" />
                            <Setter TargetName="fishHeadHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="fishColumn" Property="Width" Value="14" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding Path=(Field).(igDp:GroupByAreaMulti.HasOffsetY), RelativeSource={RelativeSource Self}}"
                                    Value="False" />
                                <Condition
                                    Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="labelCntr" Property="Margin" Value="-24,4,2,4" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding Path=(Field).(igDp:GroupByAreaMulti.HasOffsetY), RelativeSource={RelativeSource Self}}"
                                    Value="False" />
                                <Condition
                                    Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding Path=(Field).(igDp:GroupByAreaMulti.IsFirstInList), RelativeSource={RelativeSource Self}}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Padding" Value="25,4,5,4" />
                        </MultiDataTrigger>
                        <DataTrigger
                            Binding="{Binding Path=(Field).(igDp:GroupByAreaMulti.IsFirstInList), RelativeSource={RelativeSource Self}}"
                            Value="True">
                            <Setter TargetName="labelCntr" Property="Margin" Value="2,4,2,4" />
                        </DataTrigger>
                        <Trigger Property="IsInFieldChooser" Value="true">
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="FilterButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="labelCntr" Property="Margin" Value="0,0,0,0" />
                        </Trigger>

                        <Trigger Property="IsDragIndicator" Value="True">
                            <Setter Property="Padding" Value="7,4" />
                            <Setter TargetName="labelCntr" Property="Margin" Value="2,4" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="highlight" Property="Opacity" Value="0" />
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="0" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ CellPresenter __________________________________________ -->
    <Style TargetType="{x:Type igDp:CellPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:CellPresenter}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                        <igDp:CellPresenterLayoutElement SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ CellValuePresenter __________________________________________ -->
    <Style TargetType="{x:Type igDp:CellValuePresenter}">
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="BackgroundHover" Value="{StaticResource CellItemHoverBackgroundBrush}" />
        <Setter Property="BorderHoverBrush" Value="{StaticResource CellItemNormalBorderBrush}" />
        <Setter Property="BackgroundActive" Value="{StaticResource CellItemSelectedBackgroundBrush}" />
        <Setter Property="BorderActiveBrush" Value="{DynamicResource CellItemSelectedBorderBrush}" />
        <Setter Property="BackgroundSelected" Value="{StaticResource CellItemSelectedBackgroundBrush}" />
        <Setter Property="BorderSelectedBrush" Value="{DynamicResource CellItemSelectedBorderBrush}" />
        <Setter Property="BackgroundFieldSelected" Value="#FF04F35F" />
        <Setter Property="BorderFieldSelectedBrush" Value="#FF9C00CC" />
        <Setter Property="BackgroundPrimary" Value="#FF2D9153" />
        <Setter Property="BorderPrimaryBrush" Value="#FF1FFF00" />
        <Setter Property="Foreground" Value="{DynamicResource CellItemForegroundBrush}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!-- AS 5/23/07 BR23120 -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:CellValuePresenter}">
                    <igWindows:CardPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InteractionStates">
                                <VisualState x:Name="Display" />
                                <VisualState x:Name="Editing" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="FieldSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualState x:Name="Dragging" />
                                <VisualState x:Name="NotDragging" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable" />
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border
                            x:Name="MainBorder"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" />
                        <Rectangle
                            x:Name="Active1"
                            Fill="{TemplateBinding BackgroundActive}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            SnapsToDevicePixels="True"
                            Opacity="1"
                            Visibility="Collapsed"
                            StrokeThickness="1" Stroke="{TemplateBinding BorderActiveBrush}" />
                        <ContentPresenter
                            x:Name="PART_EditorSite"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}" />
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <!-- HighlightAsPrimary -->
                        <Trigger Property="HighlightAsPrimary" Value="true">
                            <Setter Property="Background"
                                    Value="{Binding Path=BackgroundPrimary, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=BorderPrimaryBrush, RelativeSource={RelativeSource Self}}" />

                        </Trigger>
                        <!-- IsFieldSelected -->
                        <Trigger Property="IsFieldSelected" Value="true">
                            <Setter Property="Background"
                                    Value="{Binding Path=BackgroundFieldSelected, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=BorderFieldSelectedBrush, RelativeSource={RelativeSource Self}}" />

                        </Trigger>
                        <!-- IsSelected -->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background"
                                    Value="{Binding Path=BackgroundSelected, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=BorderSelectedBrush, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <!-- IsActive -->
                        <Trigger Property="IsActive" Value="true">
                            <Setter Property="Visibility" TargetName="Active1" Value="Visible" />
                        </Trigger>
                        <!-- IsMouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsFieldSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource CellItemHoverBackgroundBrush}" />


                        </MultiTrigger>
                        <!-- Field.IsFixedStateChanging    JM 01-22-09 NA 9.1 FixedFields   -->
                        <DataTrigger
                            Binding="{Binding Path=Field.IsFixedStateChanging, RelativeSource={RelativeSource Self}}"
                            Value="True">
                            <Setter Property="Background" Value="#AA8DBAEB" />
                            <Setter Property="BorderBrush" Value="#AA8DBAEB" />
                        </DataTrigger>
                        <!--SSP 5/27/09 NAS9.2 IDataErrorInfo Support-->
                        <Trigger Property="IsDataErrorTemplateActive" Value="true">
                            <Setter TargetName="PART_EditorSite" Property="ContentTemplate"
                                    Value="{DynamicResource {x:Static igDp:DataPresenterBase.DataErrorContentTemplateKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpansionIndicatorStyle1" TargetType="{x:Type igWindows:ExpansionIndicator}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="sc#1, 0.57900393, 0.57900393, 0.57900393" Offset="1" />
                    <GradientStop Color="Black" Offset="0.36153846153846259" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF999999" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Margin" Value="5,0,3,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:ExpansionIndicator}">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="grdExpansionIndicatorClosed" Height="12" RenderTransformOrigin="0.5,0.5"
                              SnapsToDevicePixels="True" Width="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border x:Name="outerBorder" CornerRadius="2" RenderTransformOrigin="0.5,0.5"
                                    Background="{DynamicResource CellItemSelectedBorderBrush}" />
                            <Border x:Name="hover" CornerRadius="2" RenderTransformOrigin="0.5,0.5" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF006C87" Offset="1" />
                                        <GradientStop Color="#FE00BCEB" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Rectangle x:Name="plusHorizontal" HorizontalAlignment="Stretch" Height="2" Margin="2,5"
                                       RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Width="Auto"
                                       Fill="Black" />
                            <Rectangle x:Name="plusVert" Height="Auto" Margin="5,2" RenderTransformOrigin="0.5,0.5"
                                       Width="2" Fill="Black" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="plusVert" Value="Collapsed" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ DataRecordPresenter __________________________________________ -->
    <Style TargetType="{x:Type igDp:DataRecordPresenter}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HeaderAreaBackground" Value="Transparent" />
        <Setter Property="NestedContentBackground" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#FFCCCCCC" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:DataRecordPresenter}">
                    <igWindows:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
                        <Border
                            Visibility="Collapsed"
                            Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, AddRowBackground}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            HorizontalAlignment="Stretch"
                            x:Name="addRowFooter"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - added 1 column definition-->
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <!-- SSP 5/6/08 - Record Separators - Added two col defs-->
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - added 1 row definition-->
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <!-- SSP 5/6/08 - Record Separators - Added two row defs-->
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!-- Expansion Checkbox -->
                            <!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1-->
                            <!-- AS 1/27/09 NA 2009 Vol 1 - Set ZIndex and RenderTransform for fixed fields -->
                            <!-- AS 6/3/09 NA 2009 Vol 2 - Added Command(Parameter) & ToggleMode to support undo/redo -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Border x:Name="OrientationHorizontalSep" BorderThickness="0,0,1,0" Grid.ColumnSpan="6"
                                    Background="#FFFAFAFA" BorderBrush="#FFE7E7E7" Visibility="Collapsed" />
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <igWindows:ExpansionIndicator
                                x:Name="ExpansionIndicator"
                                Panel.ZIndex="1"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
                                Grid.Row="3"
                                Grid.Column="1"
                                Visibility="{Binding Path=ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                Command="{x:Static igDp:DataPresenterCommands.ToggleRecordIsExpanded}"
                                CommandParameter="{TemplateBinding Record}"
                                ToggleMode="Manual"
                                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource ExpansionIndicatorStyle1}" />
                            <!-- Header Background -->
                            <!-- Added 8/2/2006 GH -->
                            <!-- SSP 5/6/08 - Record Separators - changed grid.colspan to 5 from 3-->
                            <!-- AS 2/10/09 TFS13798 - Set RenderTransform for fixed fields -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <igWindows:CardPanel
                                x:Name="SpacerFill"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="6"
                                Visibility="Visible" />
                            <!-- End Added 8/2/2006 GH -->
                            <!-- Header Content -->
                            <!-- SSP 5/6/08 - Record Separators - changed grid.col to 2 from 1-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <ContentPresenter
                                x:Name="PART_HeaderContentSite"
                                Grid.Row="1"
                                Grid.Column="3"
                                Content="{TemplateBinding HeaderContent}"
                                Visibility="Visible"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                d:IsHidden="True" />
                            <!-- SSP 5/6/08 - Record Separators - Added separator rectangle -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Border
                                x:Name="RecordSeparator"
                                Grid.Row="2"
                                Grid.Column="1"
                                Visibility="Collapsed"
                                Style="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, RecordSeparatorStyle}}"
                                Grid.ColumnSpan="6" />
                            <!-- Record Content -->
                            <!-- SSP 5/6/08 - Record Separators - changed grid.row to 2 from 1 and grid.col to 2 from 1-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <ContentPresenter
                                x:Name="PART_RecordContentSite"
                                Grid.Row="3"
                                Grid.Column="3"
                                Content="{TemplateBinding DataContext}"
                                ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <!-- Nested Content -->
                            <!-- SSP 5/6/08 - Record Separators - changed grid.row to 4 from 2 and grid.col to 2 from 1-->
                            <!-- AS 3/25/09 TFS15801 - Set RenderTransform for fixed fields -->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Border
                                x:Name="PART_NestedContentSite"
                                Grid.Row="5"
                                Grid.Column="3"
                                Visibility="Visible"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}"
                                Background="{TemplateBinding NestedContentBackground}">
                                <!-- AS 11/14/07 BR26035 
								The namescope was broken because the recordlistcontrol was not in the logical tree. We 
								need to use a ContentControl instead so the content	is made a logical child. -->
                                <ContentControl
                                    RenderTransform="{TemplateBinding ScrollableElementTransform}"
                                    Content="{TemplateBinding NestedContent}"

                                    x:Name="contentControl" />

                            </Border>
                        </Grid>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <!-- START SSP 5/6/08 - Record Separators
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="2" />
                            <Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1" />
                            <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="3" />
														-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="3" />
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="3" />
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="5" />
                            <Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ExpansionIndicator" Property="Margin" Value="0,2" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="3" />
                            <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="6" />
                            <!--<Setter TargetName="RecordSeparator" Property="Grid.Row" Value="2"/>
							<Setter TargetName="RecordSeparator" Property="Grid.Column" Value="1"/>-->
                            <Setter TargetName="RecordSeparator" Property="Width" Value="10" />
                            <Setter TargetName="RecordSeparator" Property="Height" Value="Auto" />
                            <Setter TargetName="RecordSeparator" Property="BorderThickness" Value="1,0" />
                            <Setter TargetName="OrientationHorizontalSep" Property="Visibility" Value="Visible" />
                            <!-- END SSP 5/6/08 - Record Separators -->
                        </Trigger>
                        <Trigger Property="ShouldDisplayRecordContent" Value="False">
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Collapsed" />
                            <!--JJD 9/4/07 - BR26153 -->
                            <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible (see new MultiTrigger below) -->
                            <!--<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />-->
                        </Trigger>
                        <!--JJD 9/4/07 - BR26153 -->
                        <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShouldDisplayRecordContent" Value="False" />
                                <Condition Property="IsHeaderRecord" Value="False" />
                                <Condition Property="ExpansionIndicatorVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal" />
                                <Condition Property="ShouldDisplayRecordContent" Value="False" />
                            </MultiTrigger.Conditions>
                            <!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="4" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="ShouldDisplayRecordContent" Value="False" />
                            </MultiTrigger.Conditions>
                            <!-- START SSP 5/6/08 - Record Separators - Changed Value to 3 from 2-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="4" />
                        </MultiTrigger>
                        <Trigger Property="IsHeaderRecord" Value="True">
                            <!--JJD 9/4/07 - BR26153 -->
                            <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible (see new MultiTrigger below) -->
                            <!--<Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />-->
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1" />
                        </Trigger>
                        <!--JJD 9/4/07 - BR26153 -->
                        <!--Only set ExpansionIndicator Visibility to Hidden if is was Visible -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHeaderRecord" Value="True" />
                                <Condition Property="ExpansionIndicatorVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>
                        <Trigger Property="HasHeaderContent" Value="False">
                            <Setter Property="Visibility" TargetName="SpacerFill" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_HeaderContentSite" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasNestedContent" Value="true">
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible" />
                            <Setter TargetName="baseGrid" Property="Background"
                                    Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="HasNestedContent" Value="False">
                            <Setter Property="Visibility" TargetName="PART_NestedContentSite" Value="Collapsed" />
                        </Trigger>
                        <!--SSP 8/5/09 - NAS9.2 Enhanced grid view
							Changed the IsFixedOnTop trigger to MultiDataTrigger since we needed to add IsSpecialRecord
							condition. This was done because previously we were showing separator after each fixed record
							however we should not display the separator between each fixed data record if there are multiple
							fixed data records. The same change was applied to IsFixedOnBottom.
						-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSpecialRecord}" Value="true" />
                                <Condition Binding="{Binding Path=IsFixedOnTop, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="addRowFooter" Value="Visible" />
                            <Setter Property="Background" TargetName="addRowFooter"
                                    Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, FixedRecord}}" />
                            <Setter Property="BorderThickness" TargetName="addRowFooter" Value="0,0,0,1" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSpecialRecord}" Value="true" />
                                <Condition
                                    Binding="{Binding Path=IsFixedOnBottom, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="addRowFooter" Value="Visible" />
                            <Setter Property="BorderThickness" TargetName="addRowFooter" Value="0,1,0,0" />
                            <Setter Property="Background" TargetName="addRowFooter"
                                    Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, FixedRecord}}" />
                            <Setter Property="Margin" Value="0,1,0,0" />
                        </MultiDataTrigger>
                        <!-- START SSP 5/6/08 - Record Separators -->
                        <!-- For HasSeparatorBefore, default grid.row and grid.column settings are fine as setup 
							when declaring the record separator (and for horizontal orientation as setup in the
							orientation=horizontal trigger above).
						-->
                        <Trigger Property="HasSeparatorBefore" Value="true">
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!-- For HasSeparatorAfter, we have to set grid.row and grid.col based on the orientation-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorAfter" Value="true" />
                                <Condition Property="Orientation" Value="Vertical" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible" />
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="4" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorAfter" Value="true" />
                                <Condition Property="Orientation" Value="Horizontal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible" />
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="4" />
                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1" />
                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorBefore" Value="true" />
                                <Condition Property="Orientation" Value="Horizontal" />
                            </MultiTrigger.Conditions>
                            <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature - Shifted all columns and rows down and over by 1 and increased spans by 1-->
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="2" />
                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1" />
                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6" />
                        </MultiTrigger>
                        <!-- END SSP 5/6/08 - Record Separators -->
                        <!-- Changing opacity of Content to differentiate between filtered records with IsFilteredOut trigger property -->
                        <Trigger Property="IsFilteredOut" Value="True">
                            <Setter TargetName="PART_RecordContentSite" Property="Opacity" Value="0.35" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding Path=IsAddRecord, RelativeSource={RelativeSource Self}}" Value="Center">
							<Setter Property="BorderThickness" Value="0,0,0,1"/>
						</DataTrigger>-->

                        <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                           Value="BeforeParent" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                           Value="BeforeParent" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0" />
                        </MultiDataTrigger>

                        <!-- MD 8/3/10 - TFS35609 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                           Value="BeforeParentHeadersAttached" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                           Value="BeforeParentHeadersAttached" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TemplateCardView">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:DataRecordPresenter}">
                    <igWindows:CardPanel x:Name="baseGrid" Background="Transparent">
                        <!-- Record Content -->
                        <Rectangle
                            Fill="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, CardBackground}}" />
                        <ContentPresenter
                            x:Name="PART_RecordContentSite"
                            Content="{TemplateBinding DataContext}"
                            ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <!-- JM NA 10.1 CardView -->
                        <Trigger Property="IsInCard" Value="True">
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ DataRecordCellArea __________________________________________ -->
    <Style TargetType="{x:Type igDp:DataRecordCellArea}">
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource GrayForegroundStyle}" />
        <Setter Property="ForegroundStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, GrayForegroundStyle}}" />
        <Setter Property="ForegroundActiveStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, GrayForegroundStyle}}" />
        <Setter Property="ForegroundAlternateStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, GrayForegroundStyle}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:DataRecordCellArea}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="timelineIsActive">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Active1"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsActive_off">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Active1"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsSelected">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected1"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsSelected_off">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected1"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineHover">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineHover_off">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <igWindows:CardPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- Background -->
                        <Border
                            x:Name="Background"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" Background="#FF474747" />
                        <!-- Background Alternate -->
                        <Border
                            x:Name="Alternate"
                            Visibility="Collapsed"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Opacity="1" />
                        <!-- Background Selected -->
                        <Border
                            x:Name="Selected1"
                            Visibility="Visible"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Opacity="0" Background="{x:Null}" />
                        <!-- Background Hover -->
                        <Border
                            x:Name="Hover"
                            Visibility="Visible"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0" Background="{x:Null}" BorderBrush="{x:Null}" />
                        <!-- Background Active -->
                        <Border
                            x:Name="Active1"
                            Visibility="Collapsed"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" Background="{x:Null}" />
                        <ContentPresenter x:Name="CellContent" Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center" />
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsAlternate" Value="True" />
                                <Condition Property="IsFilterRecord" Value="False" />
                                <Condition Property="IsAddRecord" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Alternate" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CellContent" Property="Style"
                                    Value="{Binding Path=ForegroundAlternateStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="IsFilterRecord" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CellContent" Property="Style"
                                    Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Visibility" TargetName="Active1" Value="Visible" />
                        </MultiTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineHover}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineHover_off}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:DataRecordCellArea.Selected">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineIsSelected}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:DataRecordCellArea.Deselected">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineIsSelected_off}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsFilterRecord" Value="True">
                            <Setter Property="Visibility" TargetName="Hover" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Selected1" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Pen x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, GroupByAreaMultiConnectorLinePen}"
         x:Shared="false"
         Brush="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.ConnectorLinePenBrush}}"
         Thickness="3"
         DashStyle="{x:Static DashStyles.Dot}"
         DashCap="Round"
         StartLineCap="Round"
         EndLineCap="Round"
         LineJoin="Round" />


    <!-- _________________________ ExpandableFieldRecordPresenter ______________________________________ -->
    <Style TargetType="{x:Type igDp:ExpandableFieldRecordPresenter}">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:ExpandableFieldRecordPresenter}">
                    <ControlTemplate.Resources>
                        <!-- JM 06-04-09 TFS14198 - Changed FillBehavior to Stop now that we are initializing the Opacity to 1 in the element. -->
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="ncpVisual"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="Stop">
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00" />
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00.25" />
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:0.75" />
                            </DoubleAnimationUsingKeyFrames>

                            <!-- JM 06-04-09 TFS14198 - Added Opacity animation for the NestedContentSite -->
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_NestedContentSite"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="HoldEnd">
                                <DiscreteDoubleKeyFrame Value="1" KeyTime="00:00:00" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <!-- JM 06-04-09 TFS14198 - No longer need to fade ncpVisual to Opacity 0 - we just collapse the containing PART_NestedContentSite -->
                        <!--<Storyboard x:Key="sbHideNested">
							<DoubleAnimationUsingKeyFrames
								BeginTime="00:00:00"
								Storyboard.TargetName="ncpVisual"
								Storyboard.TargetProperty="Opacity"
								FillBehavior="HoldEnd">
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="0" KeyTime="00:00:00.15"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>-->
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="18" Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!-- Row for nested content -->
                        <!-- Expansion Checkbox -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive" />
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FilterStates">
                                <VisualState x:Name="FilteredOut" />
                                <VisualState x:Name="FilteredIn" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- Expandable Field Title -->
                        <!-- Nested Content -->
                        <!-- AS 6/3/09 NA 2009 Vol 2 - Added Command(Parameter) & ToggleMode to support undo/redo -->
                        <igWindows:ExpansionIndicator x:Name="ExpansionIndicator"
                                                      RenderTransform="{TemplateBinding FixedNearElementTransform}"
                                                      Panel.ZIndex="1"
                                                      Visibility="{TemplateBinding ExpansionIndicatorVisibility}"
                                                      Command="{x:Static igDp:DataPresenterCommands.ToggleRecordIsExpanded}"
                                                      CommandParameter="{TemplateBinding Record}"
                                                      ToggleMode="Manual"
                                                      IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Style="{DynamicResource ExpansionIndicatorStyle1}" />
                        <!-- AS 1/27/09 NA 2009 Vol 1 - Set RenderTransform for fixed fields -->
                        <Grid
                            x:Name="PART_RecordContentSite"
                            RenderTransform="{TemplateBinding FixedNearElementTransform}"
                            Margin="0"
                            Grid.Row="0"
                            Grid.Column="1"
                            Visibility="{TemplateBinding HeaderVisibility}">
                            <Border
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                RenderTransformOrigin="0.5,0.5"
                                CornerRadius="2,2,2,2"
                                SnapsToDevicePixels="True"
                                Background="{DynamicResource CellItemForegroundBrush}"
                                x:Name="borderBackground" />
                            <ContentPresenter
                                Content="{Binding (igDp:RecordPresenter.Record).Description, RelativeSource={RelativeSource TemplatedParent}}"
                                TextBlock.Foreground="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelForeground}}"
                                Margin="5" />
                        </Grid>
                        <!-- AS 2/10/09 TFS13798 - Set RenderTransform for fixed fields -->
                        <Grid
                            x:Name="PART_NestedContentSite"
                            RenderTransform="{TemplateBinding FixedNearElementTransform}"
                            Grid.Row="1"
                            Grid.Column="1"
                            Visibility="Collapsed">
                            <Border
                                CornerRadius="0,0,3,3"
                                BorderBrush="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, NestedContentBackgroundBorder}}"
                                BorderThickness="1"
                                Background="{TemplateBinding NestedContentBackground}">
                                <!-- JM 06-04-09 TFS14198 - Initialize the Opacity property to 1 instead of zero -->
                                <!-- AS 11/14/07 BR26035 
								The namescope was broken because the recordlistcontrol was not in the logical tree. We 
								need to use a ContentControl instead so the content	is made a logical child. -->
                                <ContentControl
                                    x:Name="ncpVisual"
                                    RenderTransform="{TemplateBinding ScrollableElementTransform}"
                                    Opacity="1"
                                    Content="{Binding NestedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextBlock.Foreground="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelForeground}}"
                                    Margin="{TemplateBinding Padding}" />
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- JM 06-04-09 TFS14198 - Use EventTriggers instead of property Triggers to avoid the rooting issue in the WPF framework -->
                        <!--<Trigger Property="HasNestedContent" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource sbDisplayNested}" x:Name="NestedOn"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource sbHideNested}" x:Name="NestedOff"/>
								<StopStoryboard BeginStoryboardName="NestedOn"/>
							</Trigger.ExitActions>
							<Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
						</Trigger>-->

                        <Trigger Property="HasNestedContent" Value="True">
                            <Setter TargetName="PART_NestedContentSite" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature-->
                        <DataTrigger Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                     Value="BeforeParent">
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="1" />
                        </DataTrigger>

                        <!-- MD 8/3/10 - TFS35609 -->
                        <DataTrigger Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                     Value="BeforeParentHeadersAttached">
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="1" />
                        </DataTrigger>

                        <EventTrigger RoutedEvent="igDp:RecordPresenter.ShowNestedContent">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource sbDisplayNested}" x:Name="NestedOn" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TemplateCardView">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:ExpandableFieldRecordPresenter}">
                    <ControlTemplate.Resources>
                        <!-- JM 06-04-09 TFS14198 - Changed FillBehavior to Stop now that we are initializing the Opacity to 1 in the element. -->
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="ncpVisual"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="Stop">
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00" />
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00.25" />
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:0.75" />
                            </DoubleAnimationUsingKeyFrames>
                            <!-- JM 06-04-09 TFS14198 - Added Opacity animation for the NestedContentSite -->
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_NestedContentSite"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="HoldEnd">
                                <DiscreteDoubleKeyFrame Value="1" KeyTime="00:00:00" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <!-- JM 06-04-09 TFS14198 - No longer need to fade ncpVisual to Opacity 0 - we just collapse the containing PART_NestedContentSite -->
                        <!--<Storyboard x:Key="sbHideNested">
							<DoubleAnimationUsingKeyFrames
								BeginTime="00:00:00"
								Storyboard.TargetName="ncpVisual"
								Storyboard.TargetProperty="Opacity"
								FillBehavior="HoldEnd">
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="0" KeyTime="00:00:00.15"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>-->
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!-- Row for nested content -->
                        <!-- Expandable Field Title -->
                        <Grid
                            x:Name="PART_RecordContentSite"
                            Margin="0"
                            Grid.Row="0"
                            Grid.Column="0"
                            Visibility="{TemplateBinding HeaderVisibility}">
                            <Border
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                RenderTransformOrigin="0.5,0.5"
                                CornerRadius="2,2,2,2"
                                SnapsToDevicePixels="True"
                                Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelBackground}}"
                                x:Name="borderBackground">
                                <Grid Margin="0,0,0,0" Width="Auto" Height="Auto">
                                    <Rectangle
                                        Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelOuterBorder}}"
                                        StrokeThickness="1"
                                        RadiusX="1.55015910897703"
                                        RadiusY="1.55015910897703"
                                        Fill="Transparent" />
                                    <Rectangle
                                        Margin="1"
                                        Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelInnerBorder}}"
                                        StrokeThickness="1"
                                        RadiusX="0.550159108977027"
                                        RadiusY="0.550159108977027"
                                        Fill="Transparent" />
                                </Grid>
                            </Border>
                            <Border
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                CornerRadius="2,2,2,2"
                                Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelHighlight}}"
                                x:Name="borderBackgroundHighlight">
                                <Grid Margin="0,0,0,0" Width="Auto" Height="Auto">
                                    <Rectangle
                                        Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelOuterBorder}}"
                                        StrokeThickness="1"
                                        RadiusX="1.55015910897703"
                                        RadiusY="1.55015910897703"
                                        Fill="Transparent" />
                                    <Rectangle
                                        Margin="1"
                                        Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelInnerBorder}}"
                                        StrokeThickness="1"
                                        RadiusX="0.550159108977027"
                                        RadiusY="0.550159108977027"
                                        Fill="Transparent" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                Content="{Binding Path=(igDp:RecordPresenter.Record).Description, RelativeSource={RelativeSource TemplatedParent}}"
                                TextBlock.Foreground="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelForeground}}"
                                Margin="10,3,10,3" />
                        </Grid>
                        <!-- Nested Content -->
                        <Grid
                            x:Name="PART_NestedContentSite"
                            Grid.Row="1"
                            Grid.Column="0"
                            Visibility="Collapsed">
                            <Border
                                CornerRadius="0,0,3,3"
                                BorderBrush="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, NestedContentBackgroundBorder}}"
                                BorderThickness="1"
                                Background="{TemplateBinding NestedContentBackground}">
                                <!-- JM 06-04-09 TFS14198 - Initialize the Opacity property to 1 instead of zero -->
                                <!-- AS 11/14/07 BR26035 
								The namescope was broken because the recordlistcontrol was not in the logical tree. We 
								need to use a ContentControl instead so the content	is made a logical child. -->
                                <ContentControl
                                    x:Name="ncpVisual"
                                    Opacity="1"
                                    Content="{Binding Path=NestedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextBlock.Foreground="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelForeground}}"
                                    Margin="{TemplateBinding Padding}" />
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- JM 06-04-09 TFS14198 - Use EventTriggers instead of property Triggers to avoid the rooting issue in the WPF framework -->
                        <!--<Trigger Property="HasNestedContent" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource sbDisplayNested}" x:Name="NestedOn"/>
								<StopStoryboard BeginStoryboardName="NestedOff"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource sbHideNested}" x:Name="NestedOff"/>
								<StopStoryboard BeginStoryboardName="NestedOn"/>
							</Trigger.ExitActions>
							<Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
						</Trigger>-->

                        <Trigger Property="HasNestedContent" Value="True">
                            <Setter TargetName="PART_NestedContentSite" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <EventTrigger RoutedEvent="igDp:RecordPresenter.ShowNestedContent">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource sbDisplayNested}" x:Name="NestedOn" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________ ExpandedCellPresenter __________________________________________ -->
    <Style TargetType="{x:Type igDp:ExpandedCellPresenter}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:ExpandedCellPresenter}">
                    <Border x:Name="MainBorder" Margin="2,2,2,2" Background="{TemplateBinding Background}">
                        <!-- Content -->
                        <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ GroupByAreaFieldListBox __________________________________________ -->
    <Style TargetType="{x:Type igDp:GroupByAreaFieldListBox}">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Margin" Value="0,0,0,3" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByAreaFieldListBox}">
                    <!-- JM 08-18-09 TFS19242 - Set the FocusVisualStyle to Null so a focus rect is not displayed -->
                    <ScrollViewer Style="{StaticResource ScrollViewerMainView}" CanContentScroll="true"
                                  FocusVisualStyle="{x:Null}">
                        <!-- [JM 04-27-07 Changed to VirtualizingStackPanel from StackPanel to improve performance -->
                        <!-- <StackPanel IsItemsHost="True" Orientation="Horizontal" Margin="{TemplateBinding Margin}"/> -->
                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Height" Value="20" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type igDp:GroupByAreaMulti}">
        <Style.Resources>
            <DataTemplate DataType="{x:Type igDp:Field}">
                <igDp:LabelPresenter
                    Field="{Binding}"
                    VerticalAlignment="Top"
                    Margin="{Binding Path=(igDp:GroupByAreaMulti.Offset)}"
                    IsInGroupByArea="true" />
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Prompt1" Value="{Binding Path=Value, Source={x:Static igDp:Resources.GroupByAreaPrompt1}}" />
        <Setter Property="Prompt2" Value="{Binding Path=Value, Source={x:Static igDp:Resources.GroupByAreaPrompt2}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.GroupByAreaMultiBackgroundBrush}}" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="BorderBrush" Value="#FFA7A9B0" />
        <Setter Property="Padding" Value="0,5" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.FieldLayoutForeground}}" />
        <Setter Property="FieldLayoutDescriptionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock
                            Foreground="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.FieldLayoutForeground}}"
                            Text="{Binding Description}" Margin="4,2,4,2" FontWeight="Bold" VerticalAlignment="Center"
                            igDp:GroupByAreaMulti.IsConnectorLineTarget="False" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ConnectorLinePen"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, GroupByAreaMultiConnectorLinePen}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByAreaMulti}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowPrompts">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt1"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt2"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HidePrompts">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt1"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt2"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <igWindows:ExpanderBar
                            x:Name="ExpanderBarButton"
                            Grid.Row="0"
                            Height="12"
                            Command="{x:Static igDp:GroupByAreaBase.ToggleExpandedState}"
                            Style="{DynamicResource ExpanderBarStyle1}" BorderBrush="{x:Null}" BorderThickness="0"
                            BorderHoverBrush="{x:Null}">
                            <igWindows:ExpanderBar.BackgroundHover>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF181818" Offset="0" />
                                    <GradientStop Color="#FF010101" Offset="1" />
                                </LinearGradientBrush>
                            </igWindows:ExpanderBar.BackgroundHover>
                        </igWindows:ExpanderBar>
                        <igWindows:ExpanderDecorator Grid.Row="1"
                                                     HorizontalAlignment="Stretch"
                                                     IsExpanded="{Binding IsExpanded, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Orientation="Vertical">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Border Background="{DynamicResource CellItemSelectedBackgroundBrush}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="13" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Rectangle Fill="{DynamicResource CellItemSelectedBackgroundBrush}"
                                                   Grid.RowSpan="2" />
                                        <igWindows:CardPanel Grid.RowSpan="2">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch"
                                                        Margin="5,0,6,0">
                                                <ContentControl x:Name="prompt1"
                                                                Content="{TemplateBinding Prompt1}"
                                                                ContentTemplate="{TemplateBinding Prompt1Template}"
                                                                FontSize="11"
                                                                Opacity=".5"
                                                                VerticalAlignment="Center" />
                                                <ContentControl x:Name="prompt2"
                                                                Content="{TemplateBinding Prompt2}"
                                                                ContentTemplate="{TemplateBinding Prompt2Template}"
                                                                Opacity="1" FontSize="11"
                                                                VerticalAlignment="Center" Margin="5,0,0,0" />
                                            </StackPanel>
                                            <ItemsControl
                                                ItemsSource="{Binding FieldLayoutGroupByInfos, RelativeSource={RelativeSource TemplatedParent}}"
                                                VerticalAlignment="Center">
                                                <ItemsControl.Template>
                                                    <ControlTemplate>
                                                        <ScrollViewer CanContentScroll="False"
                                                                      Style="{DynamicResource ScrollViewerMainView}">
                                                            <igDp:GroupByAreaMultiPanel
                                                                IsItemsHost="True"
                                                                Orientation="{Binding FieldLayoutOrientation, RelativeSource={RelativeSource AncestorType={x:Type igDp:GroupByAreaMulti}}}"
                                                                ConnectorLinePen="{Binding ConnectorLinePen, RelativeSource={RelativeSource AncestorType={x:Type igDp:GroupByAreaMulti}}}" />
                                                        </ScrollViewer>
                                                    </ControlTemplate>
                                                </ItemsControl.Template>
                                            </ItemsControl>
                                        </igWindows:CardPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                        </igWindows:ExpanderDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="igDp:GroupByAreaMulti.ShowPrompts">
                            <BeginStoryboard x:Name="ShowPrompts_BeginStoryboard"
                                             Storyboard="{StaticResource ShowPrompts}" />
                            <StopStoryboard BeginStoryboardName="HidePrompts_BeginStoryboard" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:GroupByAreaMulti.HidePrompts">
                            <BeginStoryboard x:Name="HidePrompts_BeginStoryboard"
                                             Storyboard="{StaticResource HidePrompts}" />
                            <StopStoryboard BeginStoryboardName="ShowPrompts_BeginStoryboard" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="FieldLayoutOrientation" Value="Horizontal">
                <Setter Property="ConnectorLinePen" Value="{x:Null}" />
                <Setter Property="FieldLayoutOffsetY" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- _________________________ GroupByAreaFieldLabel __________________________________________ -->
    <Style TargetType="{x:Type igDp:GroupByAreaFieldLabel}">
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#FF151C55" />
        <Setter Property="BorderBrush" Value="#FF4A565D" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0.000000" Color="#FFFCFDFD" />
                    <GradientStop Offset="0.5" Color="#FFDCDFE0" />
                    <GradientStop Offset="0.5" Color="#FFB8C2CB" />
                    <GradientStop Offset="1.000000" Color="#FFDAEBEB" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,3,6,3.5" />
        <Setter Property="Margin" Value="0,0,1,0" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByAreaFieldLabel}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbHighlightOn">
                            <DoubleAnimation
                                Storyboard.TargetName="labelHighlight"
                                Storyboard.TargetProperty="Opacity"
                                BeginTime="00:00:00"
                                Duration="00:00:00.15"
                                To="1"
                                FillBehavior="HoldEnd" />
                        </Storyboard>
                        <Storyboard x:Key="sbHighlightOff">
                            <DoubleAnimation
                                Storyboard.TargetName="labelHighlight"
                                Storyboard.TargetProperty="Opacity"
                                BeginTime="00:00:00"
                                Duration="00:00:01.25"
                                To="0"
                                FillBehavior="HoldEnd" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="outerGrid" SnapsToDevicePixels="True" RenderTransformOrigin="0.5,0.5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle
                            StrokeThickness="0"
                            RadiusX="0"
                            RadiusY="0" Fill="#FF1D1D1D" />
                        <Rectangle
                            x:Name="labelHighlight"
                            StrokeThickness="0"
                            RadiusX="0"
                            RadiusY="0"
                            Opacity="0" Fill="#FF42FF00" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          Content="{Binding (igDp:GroupByAreaFieldLabel.Field).Label, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource sbHighlightOn}" x:Name="HighlightOn" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource sbHighlightOff}" x:Name="HighlightOff" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <EventTrigger RoutedEvent="igDp:GroupByAreaFieldLabel.RemovedFromAvailableList">
                            <BeginStoryboard x:Name="CollapseLabel_BeginStoryboard"
                                             Storyboard="{StaticResource CollapseLabel}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:GroupByAreaFieldLabel.AddedToAvailableList">
                            <BeginStoryboard x:Name="AddLabelToList_BeginStoryboard"
                                             Storyboard="{StaticResource ExpandLabel}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:GroupByAreaFieldLabel.AddedToGroupedList">
                            <BeginStoryboard x:Name="AddLabelToGroup_BeginStoryboard"
                                             Storyboard="{StaticResource ExpandLabel}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ GroupByRecordPresenter ______________________________________ -->
    <Style TargetType="{x:Type igDp:GroupByRecordPresenter}">
        <Setter Property="Foreground"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelForeground}}" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByRecordPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="ncpVisual"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="HoldEnd">
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00" />
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00.25" />
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:0.75" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpVisual"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="00:00:00" />
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="00:00:0.75" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpMask"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="00:00:00" />
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="00:00:0.75" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="sbHideNested">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="NestedContentPresenter"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="HoldEnd">
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:00.15" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="row0" Height="Auto" />
                            <RowDefinition x:Name="row1" MinHeight="18" Height="Auto" />
                            <RowDefinition x:Name="row2" Height="*" />
                        </Grid.RowDefinitions>
                        <!-- Row for nested content -->
                        <!-- Expansion Checkbox -->
                        <!-- AS 1/27/09 NA 2009 Vol 1 - Set ZIndex and RenderTransform for fixed fields -->
                        <!-- AS 6/3/09 NA 2009 Vol 2 - Added Command(Parameter) & ToggleMode to support undo/redo -->
                        <igWindows:ExpansionIndicator x:Name="ExpansionIndicator"
                                                      RenderTransform="{TemplateBinding FixedNearElementTransform}"
                                                      Panel.ZIndex="1"
                                                      Grid.Row="1"
                                                      Visibility="{TemplateBinding ExpansionIndicatorVisibility}"
                                                      Command="{x:Static igDp:DataPresenterCommands.ToggleRecordIsExpanded}"
                                                      CommandParameter="{TemplateBinding Record}"
                                                      ToggleMode="Manual"
                                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Style="{DynamicResource ExpansionIndicatorStyle1}" Margin="5,0" />

                        <!-- JJD 6/4/09 - TFS17060 - Added Header site to support HeaderPlacementInGroupBy 'OnTop' in reporting -->
                        <ContentPresenter
                            x:Name="PART_HeaderContentSite"
                            Grid.Row="0"
                            Grid.Column="1"
                            Content="{TemplateBinding HeaderContent}"
                            Visibility="{Binding Path=HasHeaderContent, Converter={StaticResource BoolToVisConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            d:IsHidden="True" />

                        <!-- Record content site -->
                        <!-- AS 1/27/09 NA 2009 Vol 1 - Set RenderTransform for fixed fields -->
                        <Grid
                            x:Name="PART_RecordContentSite"
                            RenderTransform="{TemplateBinding FixedNearElementTransform}"
                            Margin="0"
                            Grid.Row="1"
                            Grid.Column="1"
                            Visibility="Collapsed">
                            <!-- Background Bar -->
                            <Border
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                RenderTransformOrigin="0.5,0.5"
                                CornerRadius="1"
                                SnapsToDevicePixels="True"
                                Background="{DynamicResource CellItemHoverBackgroundBrush}" />
                            <!-- End Added 8/1/2006 GH -->
                            <!-- End Background Bar -->
                            <!-- End Add 8/1/2006 GH-->
                            <!-- Label Text -->
                            <!-- SSP 4/3/08 - Summaries Functionality 
							Enclosed the existing ContentControl node into a Grid and added
							GroupBySummariesPresenter node.
							-->
                            <StackPanel Orientation="Vertical" Margin="5">
                                <ContentControl
                                    Content="{Binding Path=Description, RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                <!-- SSP 4/3/08 - Summaries Functionality -->
                                <!-- AS 1/27/09 NA 2009 Vol 1 - Set RenderTransform for fixed fields -->
                                <igDp:GroupBySummariesPresenter
                                    RenderTransform="{TemplateBinding ScrollableElementTransform}"
                                    HorizontalAlignment="Left"
                                    x:Name="GroupBySummariesPresenter"
                                    Visibility="Collapsed"
                                    GroupByRecord="{TemplateBinding Record}" />
                            </StackPanel>
                        </Grid>
                        <!-- Nested Content -->
                        <Grid
                            x:Name="PART_NestedContentSite"
                            Grid.Row="2"
                            Grid.Column="1"
                            Visibility="Collapsed">
                            <!-- AS 2/13/09 TFS13978 - Set RenderTransform for fixed fields -->
                            <Border
                                CornerRadius="0,0,3,3"
                                BorderBrush="{x:Null}"
                                BorderThickness="1"
                                RenderTransform="{TemplateBinding FixedNearElementTransform}" Background="{x:Null}">
                                <!-- AS 3/25/09 TFS15801 -->
                                <ContentControl
                                    RenderTransform="{TemplateBinding ScrollableElementTransform}"
                                    x:Name="NestedContentPresenter"
                                    Content="{Binding Path=NestedContent, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <!-- AS 11/14/07 BR26035 
								The namescope was broken because the recordlistcontrol was not in the logical tree. We 
								need to use a ContentControl instead so the content	is made a logical child. -->
                            <!-- AS 3/25/09 TFS15801 
                                This should be nested within the Border above.
							<ContentControl x:Name="NestedContentPresenter" Content="{Binding Path=NestedContent, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,5"/>-->
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShouldDisplayGroupByRecordContent" Value="true">
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ShouldDisplayGroupByRecordContent" Value="false">
                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <!-- SSP 4/3/08 - Summaries Functionality -->
                        <Trigger Property="ShouldDisplaySummaryCells" Value="true">
                            <Setter TargetName="GroupBySummariesPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="ShouldDisplayGroupByRecordContent" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="2" />
                        </MultiTrigger>

                        <!-- JJD 1/20/09 - In horizontal mode we need to leave the height on the content area visible -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal" />
                                <Condition Property="ShouldDisplayGroupByRecordContent" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="HasNestedContent" Value="true">
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!-- MD 6/10/10 - ChildRecordsDisplayOrder feature-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                           Value="BeforeParent" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="2" />
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="2" />
                            <Setter TargetName="row0" Property="Height" Value="*" />
                            <Setter TargetName="row2" Property="Height" Value="Auto" />
                        </MultiDataTrigger>

                        <!-- MD 8/3/10 - TFS35609 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.ChildRecordsDisplayOrderResolved}"
                                           Value="BeforeParentHeadersAttached" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="2" />
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="2" />
                            <Setter TargetName="row0" Property="Height" Value="*" />
                            <Setter TargetName="row2" Property="Height" Value="Auto" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TemplateCardView">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByRecordPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="ncpVisual"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="HoldEnd">
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00" />
                                <DiscreteDoubleKeyFrame Value="0" KeyTime="00:00:00.25" />
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:0.75" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpVisual"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="00:00:00" />
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="00:00:0.75" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpMask"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="00:00:00" />
                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="00:00:0.75" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="sbHideNested">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="NestedContentPresenter"
                                Storyboard.TargetProperty="Opacity"
                                FillBehavior="HoldEnd">
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" Value="1" KeyTime="00:00:00.15" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" MinWidth="20" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!-- Row for nested content -->
                        <!-- Record content site -->
                        <Grid
                            x:Name="PART_RecordContentSite"
                            Margin="0"
                            Grid.Row="1"
                            Grid.Column="0"
                            Visibility="Collapsed"
                            d:LayoutOverrides="GridBox">
                            <!-- Background Bar -->
                            <Border
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                RenderTransformOrigin="0.5,0.5"
                                CornerRadius="2,2,2,2"
                                SnapsToDevicePixels="True"
                                Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelBackground}}">
                                <Grid Margin="0,0,0,0" Width="Auto" Height="Auto">
                                    <Rectangle
                                        Stroke="#44000000"
                                        StrokeThickness="1"
                                        RadiusX="1.55015910897703"
                                        RadiusY="1.55015910897703"
                                        Fill="Transparent" />
                                    <Rectangle
                                        Margin="1"
                                        Stroke="#44FFFFFF"
                                        StrokeThickness="1"
                                        RadiusX="0.550159108977027"
                                        RadiusY="0.550159108977027"
                                        Fill="Transparent" />
                                </Grid>
                            </Border>
                            <!-- End Background Bar -->
                            <Border
                                x:Name="highlight"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                CornerRadius="2,2,2,2"
                                Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelHighlight}}">
                                <Grid Margin="0,0,0,0" Width="Auto" Height="Auto">
                                    <Rectangle
                                        Stroke="#44000000"
                                        StrokeThickness="1"
                                        RadiusX="1.55015910897703"
                                        RadiusY="1.55015910897703"
                                        Fill="Transparent" />
                                    <Rectangle
                                        Margin="1"
                                        Stroke="#44FFFFFF"
                                        StrokeThickness="1"
                                        RadiusX="0.550159108977027"
                                        RadiusY="0.550159108977027"
                                        Fill="Transparent" />
                                </Grid>
                            </Border>
                            <!-- End Add 8/1/2006 GH-->
                            <!-- Label Text -->
                            <StackPanel Orientation="Vertical">
                                <ContentControl
                                    Content="{Binding Path=Description, RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                <!-- SSP 4/3/08 - Summaries Functionality -->
                                <igDp:GroupBySummariesPresenter
                                    Grid.Row="1"
                                    HorizontalAlignment="Left"
                                    x:Name="GroupBySummariesPresenter"
                                    Visibility="Collapsed"
                                    GroupByRecord="{TemplateBinding Record}" />
                            </StackPanel>
                        </Grid>
                        <!-- Nested Content -->
                        <Grid
                            x:Name="PART_NestedContentSite"
                            Grid.Row="1"
                            Grid.Column="0"
                            Visibility="Collapsed">
                            <!--<igWindows:NestedContentBackground/>-->
                            <Border CornerRadius="0,0,3,3" BorderBrush="#44102975" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.25" />
                                        <GradientStop Color="#FFEEEEEE" Offset="1.2" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!-- AS 3/25/09 TFS15801 -->
                                <ContentControl x:Name="NestedContentPresenter"
                                                Content="{Binding Path=NestedContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="0,0,0,5" />
                            </Border>
                            <!-- AS 11/14/07 BR26035 
								The namescope was broken because the recordlistcontrol was not in the logical tree. We 
								need to use a ContentControl instead so the content	is made a logical child. -->
                            <!-- AS 3/25/09 TFS15801 
                                This should be nested within the Border above.
                            <ContentControl x:Name="NestedContentPresenter" Content="{Binding Path=NestedContent, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,5"/>-->
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShouldDisplayGroupByRecordContent" Value="true">
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--<Trigger Property="ShouldDisplayGroupByRecordContent" Value="false"/>-->
                        <!-- SSP 4/3/08 - Summaries Functionality -->
                        <Trigger Property="ShouldDisplaySummaryCells" Value="true">
                            <Setter TargetName="GroupBySummariesPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasNestedContent" Value="true">
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ HeaderPresenter__________________________________________ -->
    <Style TargetType="{x:Type igDp:HeaderPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:HeaderPresenter}">
                    <ContentPresenter
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ HeaderLabelArea__________________________________________ -->
    <Style TargetType="{x:Type igDp:HeaderLabelArea}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:HeaderLabelArea}">
                    <Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ HeaderPrefixArea__________________________________________ -->
    <Style TargetType="{x:Type igDp:HeaderPrefixArea}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!-- JM 10-17-08 [TFS7039] -->
        <!--<Setter Property="Visibility" Value="Hidden"/>-->
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:HeaderPrefixArea}">
                    <!--SSP 6/18/09 - NAS9.2 Field Chooser - Added field chooser button in the below grid.-->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <!--Button that displays field chooser-->
                        <Button
                            x:Name="fieldChooserButton"
                            Style="{DynamicResource {x:Static igDp:DataPresenterBase.FieldChooserButtonStyleKey}}"
                            Command="{x:Static igDp:DataPresenterCommands.ShowFieldChooser}"
                            CommandParameter="{TemplateBinding FieldLayout}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <!--SSP 6/18/09 - NAS9.2 Field Chooser - Added field chooser button-->
                        <DataTrigger
                            Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=FieldLayout.HeaderPrefixAreaDisplayModeResolved}"
                            Value="FieldChooserButton">
                            <Setter TargetName="fieldChooserButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ RecordSelector __________________________________________ -->
    <Style TargetType="{x:Type igDp:RecordSelector}">
        <Setter Property="Background" Value="#FF000000" />
        <Setter Property="BorderBrush" Value="#FFCCCCCC" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:RecordSelector}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="selectorArrow"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="selectorArrow"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.05" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="RecordActiveTrue">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="selectorArrow_Active"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedRecordBtn"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="RecordActiveFalse">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="selectorArrow_Active"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedRecordBtn"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideSelector">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Duration="00:00:00.0010000"
                                Storyboard.TargetName="selectors"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeIn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedRecordBtn"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeOut">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedRecordBtn"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           FillBehavior="Stop">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="MainBorder" Background="#00FFFFFF" Cursor="{TemplateBinding Cursor}">
                        <!--SSP 4/21/09 NAS9.2 IDataErrorInfo Support
							Added a column definition.
						-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- iDataErrorInfo -->
                        <Border x:Name="errorBd" Width="2" Grid.ColumnSpan="3" Visibility="Collapsed"
                                HorizontalAlignment="Right" />
                        <!-- Selector Arrows -->
                        <Grid
                            x:Name="selectors"
                            Height="16"
                            Width="16"
                            Opacity="1">
                            <Path
                                x:Name="selectorArrow"
                                RenderTransformOrigin="0.5,0.5"
                                Stretch="Fill"
                                Stroke="#00CCCCCC"
                                StrokeThickness="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Width="7"
                                Height="10"
                                Cursor="{TemplateBinding Cursor}"
                                Data="M60,40L60,20 70,30z"
                                Visibility="Visible"
                                Opacity="0.15" Fill="{DynamicResource CellItemForegroundBrush}" />
                            <Path
                                x:Name="selectorDataChanged"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="5.409"
                                Width="3.444"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 1,8.6568603515625 C1,8.6568603515625 1,1.3431400060653687 1,1.3431400060653687 1,1.3431400060653687 5.656859874725342,5 5.656859874725342,5 5.656859874725342,5 1,8.6568603515625 1,8.6568603515625 z"
                                Fill="{DynamicResource CellItemForegroundBrush}"
                                Visibility="Collapsed" />
                            <Path
                                x:Name="selectorAddRecord"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="7.497498035430908"
                                Width="4.656859874725342"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 0,7.497498035430908 C0,7.497498035430908 0,0 0,0 0,0 4.656859874725342,3.748749017715454 4.656859874725342,3.748749017715454 4.656859874725342,3.748749017715454 0,7.497498035430908 0,7.497498035430908 z"
                                Fill="{DynamicResource CellItemForegroundBrush}"
                                Visibility="Collapsed"
                                RenderTransformOrigin="0.5,0.5" />
                            <Path
                                x:Name="selectorArrow_Active"
                                RenderTransformOrigin="0.5,0.5"

                                Stretch="Fill"
                                Stroke="#00CCCCCC"
                                StrokeThickness="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Margin="4.5,3,4.5,3"
                                Width="7"
                                Height="10"
                                Cursor="{TemplateBinding Cursor}"
                                Data="M60,40L60,20 70,30z"
                                Visibility="Visible"
                                Opacity="0" Fill="{DynamicResource CellItemSelectedBorderBrush}" />
                            <!-- AS 7/9/10 TFS35642 - Moved the Command into the trigger -->
                            <Button
                                x:Name="ClearButton"
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding FilterClearButtonVisibility}"
                                HorizontalAlignment="Center" Background="{DynamicResource CellItemNormalBorderBrush}"
                                BorderBrush="{DynamicResource CellItemNormalBackgroundBrush}" />
                        </Grid>
                        <!-- IsAddRecord and IsDataChanged Icons (with mini-selectors) -->
                        <Grid
                            x:Name="icons"
                            Height="16"
                            Width="16"
                            d:LayoutOverrides="Width, Height"
                            HorizontalAlignment="Center"
                            Margin="0,0,0,0"
                            VerticalAlignment="Center">
                            <Path
                                x:Name="addRecordOuter"
                                Margin="3,3,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="10"
                                Width="10"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 10,3 C10,3 6,3 6,3 6,3 6,6 6,6 6,6 3,6 3,6 3,6 3,10 3,10 3,10 6,10 6,10 6,10 6,13 6,13 6,13 10,13 10,13 10,13 10,10 10,10 10,10 13,10 13,10 13,10 13,6 13,6 13,6 10,6 10,6 10,6 10,3 10,3 z"
                                Fill="#898989"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="True" />
                            <Path
                                x:Name="addRecordInner"
                                Margin="4,4,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="8"
                                Width="8"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 9,4 C9,4 7,4 7,4 7,4 7,7 7,7 7,7 4,7 4,7 4,7 4,9 4,9 4,9 7,9 7,9 7,9 7,12 7,12 7,12 9,12 9,12 9,12 9,9 9,9 9,9 12,9 12,9 12,9 12,7 12,7 12,7 9,7 9,7 9,7 9,4 9,4 z"
                                Fill="#cccccc"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="True" />
                            <Path
                                x:Name="dataChangedActive"
                                Margin="4.510000228881836,4.190000057220459,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="10.559999942779541"
                                Width="10.710000991821289"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 11.762499809265137,4.190000057220459 C11.762499809265137,4.190000057220459 13.622968673706055,5.4495320320129395 13.622968673706055,5.4495320320129395 13.622968673706055,5.4495320320129395 10.8100004196167,8.90609359741211 10.8100004196167,8.90609359741211 10.8100004196167,8.90609359741211 15.220001220703125,8.364218711853027 15.220001220703125,8.364218711853027 15.220001220703125,8.364218711853027 15.220001220703125,10.575780868530273 15.220001220703125,10.575780868530273 15.220001220703125,10.575780868530273 10.8100004196167,10.07796859741211 10.8100004196167,10.07796859741211 10.8100004196167,10.07796859741211 13.622968673706055,13.51953125 13.622968673706055,13.51953125 13.622968673706055,13.51953125 11.762499809265137,14.75 11.762499809265137,14.75 11.762499809265137,14.75 9.842968940734863,10.575780868530273 9.842968940734863,10.575780868530273 9.842968940734863,10.575780868530273 7.952969074249268,14.75 7.952969074249268,14.75 7.952969074249268,14.75 6.09250020980835,13.51953125 6.09250020980835,13.51953125 6.09250020980835,13.51953125 8.920000076293945,10.07796859741211 8.920000076293945,10.07796859741211 8.920000076293945,10.07796859741211 4.510000228881836,10.575780868530273 4.510000228881836,10.575780868530273 4.510000228881836,10.575780868530273 4.510000228881836,8.364218711853027 4.510000228881836,8.364218711853027 4.510000228881836,8.364218711853027 8.920000076293945,8.90609359741211 8.920000076293945,8.90609359741211 8.920000076293945,8.90609359741211 6.09250020980835,5.4495320320129395 6.09250020980835,5.4495320320129395 6.09250020980835,5.4495320320129395 7.952969074249268,4.190000057220459 7.952969074249268,4.190000057220459 7.952969074249268,4.190000057220459 9.842968940734863,8.247031211853027 9.842968940734863,8.247031211853027 9.842968940734863,8.247031211853027 11.762499809265137,4.190000057220459 11.762499809265137,4.190000057220459 z"
                                Visibility="Collapsed">
                                <Path.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#00FFFFFF" Offset="0" />
                                        <GradientStop Color="#FFB1B1B1" Offset="1" />
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path
                                x:Name="dataChanged"
                                Margin="2.509999990463257,2.690000057220459,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="10.559999942779541"
                                Width="10.710001230239868"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 9.762499809265137,2.690000057220459 C9.762499809265137,2.690000057220459 11.622968673706055,3.9495320320129395 11.622968673706055,3.9495320320129395 11.622968673706055,3.9495320320129395 8.8100004196167,7.406094074249268 8.8100004196167,7.406094074249268 8.8100004196167,7.406094074249268 13.220001220703125,6.8642191886901855 13.220001220703125,6.8642191886901855 13.220001220703125,6.8642191886901855 13.220001220703125,9.075780868530273 13.220001220703125,9.075780868530273 13.220001220703125,9.075780868530273 8.8100004196167,8.57796859741211 8.8100004196167,8.57796859741211 8.8100004196167,8.57796859741211 11.622968673706055,12.01953125 11.622968673706055,12.01953125 11.622968673706055,12.01953125 9.762499809265137,13.25 9.762499809265137,13.25 9.762499809265137,13.25 7.842968940734863,9.075780868530273 7.842968940734863,9.075780868530273 7.842968940734863,9.075780868530273 5.952969074249268,13.25 5.952969074249268,13.25 5.952969074249268,13.25 4.09250020980835,12.01953125 4.09250020980835,12.01953125 4.09250020980835,12.01953125 6.920000076293945,8.57796859741211 6.920000076293945,8.57796859741211 6.920000076293945,8.57796859741211 2.509999990463257,9.075780868530273 2.509999990463257,9.075780868530273 2.509999990463257,9.075780868530273 2.509999990463257,6.8642191886901855 2.509999990463257,6.8642191886901855 2.509999990463257,6.8642191886901855 6.920000076293945,7.406094074249268 6.920000076293945,7.406094074249268 6.920000076293945,7.406094074249268 4.09250020980835,3.9495320320129395 4.09250020980835,3.9495320320129395 4.09250020980835,3.9495320320129395 5.952969074249268,2.690000057220459 5.952969074249268,2.690000057220459 5.952969074249268,2.690000057220459 7.842968940734863,6.747031211853027 7.842968940734863,6.747031211853027 7.842968940734863,6.747031211853027 9.762499809265137,2.690000057220459 9.762499809265137,2.690000057220459 z"
                                Visibility="Collapsed">
                                <Path.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#00FFFFFF" Offset="0" />
                                        <GradientStop Color="#FFB1B1B1" Offset="1" />
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path
                                x:Name="addRecordActiveOuter"
                                Margin="4,3.923218011856079,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="10.076781988143921"
                                Width="10"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 10.990951538085938,3.923218011856079 C10.990951538085938,3.923218011856079 7,3.923218011856079 7,3.923218011856079 7,3.923218011856079 7,7 7,7 7,7 4,7 4,7 4,7 4,11 4,11 4,11 7,11 7,11 7,11 7,14 7,14 7,14 10.990951538085938,14 10.990951538085938,14 10.990951538085938,14 10.989999771118164,11 10.989999771118164,11 10.989999771118164,11 14,11 14,11 14,11 14,7 14,7 14,7 10.989999771118164,7 10.989999771118164,7 10.989999771118164,7 10.990951538085938,3.923218011856079 10.990951538085938,3.923218011856079 z"
                                Fill="#898989"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="False" />
                            <Path
                                x:Name="addRecordActiveInner"
                                Margin="5,5,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Height="8"
                                Width="8"
                                Stretch="Fill"
                                Opacity="1"
                                Data="M 10,5 C10,5 8,5 8,5 8,5 8,8 8,8 8,8 5,8 5,8 5,8 5,10 5,10 5,10 8,10 8,10 8,10 8,13 8,13 8,13 10,13 10,13 10,13 10,10 10,10 10,10 13,10 13,10 13,10 13,8 13,8 13,8 10,8 10,8 10,8 10,5 10,5 z"
                                Fill="#cccccc"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="False" />
                        </Grid>
                        <igDp:FixedRecordButton x:Name="FixedRecordBtn" Grid.Column="1"
                                                IsFixedOnTopAllowed="{TemplateBinding IsFixedOnTopAllowed}"
                                                IsFixedOnBottomAllowed="{TemplateBinding IsFixedOnBottomAllowed}"
                                                VerticalAlignment="Center"
                                                Visibility="{TemplateBinding FixedButtonVisibility}"
                                                Opacity="0.4" Foreground="#FFC2C2C2" />
                        <Rectangle x:Name="OrientationHorizontalSep" Width="1" Fill="#FFE7E7E7"
                                   HorizontalAlignment="Right" Visibility="Collapsed" Grid.ColumnSpan="3" />
                        <!--JJD 6/10/09 NAS9.2 Record fing feature-->


                        <!--SSP 4/21/09 NAS9.2 IDataErrorInfo Support-->
                        <!--SSP 9/1/09 TFS19773 - Replaced Control with AutomationControl-->
                        <igWindows:AutomationControl x:Name="errorIcon" Grid.Column="2"
                                                     Visibility="Collapsed"
                                                     Margin="2,0,4,0"
                                                     Style="{DynamicResource {x:Static igDp:DataPresenterBase.DataErrorIconStyleKey}}"
                                                     Foreground="#FFC00000" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- JJD 9/17/09
                             Use event trigger below instead of property triggers which can root the element 
                             in certain situations due to a bug in the WPF framework
                        <MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsFilterRecord" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource MouseEnter}"/>
								<BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}" x:Name="SigmaFadeIn_BeginStoryboard"/>
								<BeginStoryboard x:Name="SigmaFadeIn_BeginStoryboard1" Storyboard="{StaticResource SigmaFadeIn}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource MouseLeave}" x:Name="MouseLeave_BeginStoryboard"/>
								<BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}" x:Name="SigmaFadeOut_BeginStoryboard"/>
								<StopStoryboard BeginStoryboardName="SigmaFadeIn_BeginStoryboard1"/>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsActive" Value="True"/>
								<Condition Property="IsFilterRecord" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource RecordActiveFalse}" x:Name="MouseLeave_BeginStoryboard1"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource RecordActiveTrue}" x:Name="RecordActiveTrue_BeginStoryboard"/>
							</MultiTrigger.EnterActions>
						</MultiTrigger>-->
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource MouseEnter}" />
                                <BeginStoryboard Storyboard="{StaticResource SigmaFadeIn}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource MouseLeave}" />
                                <BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:RecordSelector.Activated">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource RecordActiveTrue}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:RecordSelector.Deactivated">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource RecordActiveFalse}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsFilterRecord" Value="True">
                            <Setter Property="Visibility" TargetName="selectorArrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="selectorArrow_Active" Value="Collapsed" />
                        </Trigger>
                        <!-- AS 7/9/10 TFS35642 
              Only set the command when we know we will use it so it doesn't unnecessarily cause routed events. 
            -->
                        <Trigger Property="FilterClearButtonVisibility" Value="Visible">
                            <Setter Property="Command" TargetName="ClearButton"
                                    Value="{x:Static igDp:DataPresenterCommands.ClearActiveRecordCellFilters}" />
                        </Trigger>
                        <!-- DataRecordPresenter .IsAddRecord == true -->
                        <Trigger Property="IsAddRecord" Value="True">
                            <Setter TargetName="addRecordOuter" Property="Visibility" Value="Visible" />
                            <Setter TargetName="addRecordInner" Property="Visibility" Value="Visible" />
                            <Setter Property="Visibility" TargetName="selectorAddRecord" Value="Visible" />
                            <Setter Property="Visibility" TargetName="selectorArrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="selectorArrow_Active" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDataChanged" Value="True" />
                                <Condition Property="IsFilterRecord" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="dataChanged" Property="Visibility" Value="Visible" />
                            <Setter Property="Visibility" TargetName="selectorDataChanged" Value="Visible" />
                            <Setter Property="Visibility" TargetName="selectorArrow" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsAddRecord" Value="True" />
                                <Condition Property="IsDataChanged" Value="True" />
                                <Condition Property="IsFilterRecord" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="dataChanged" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="dataChangedActive" Value="Collapsed" />
                        </MultiTrigger>
                        <!--SSP 4/21/09 NAS9.2 IDataErrorInfo Support-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasDataError" Value="True" />
                                <Condition Property="IsDataErrorDisplayModeIcon" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="errorIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="errorIcon" Property="ToolTip"
                                    Value="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=DataError}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasDataError" Value="True" />
                                <Condition Property="IsDataErrorDisplayModeHighlight" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="errorBd" Property="Background"
                                    Value="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.DataErrorHighlightBorderBrushKey}}" />
                            <Setter TargetName="errorBd" Property="CornerRadius" Value="1" />
                            <Setter TargetName="errorBd" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MainBorder" Property="ToolTip"
                                    Value="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=DataError}" />
                        </MultiTrigger>
                        <!-- Location Triggers -->
                        <Trigger Property="Location" Value="AboveCellArea">
                            <Setter Property="Grid.Column" TargetName="selectors" Value="1" />
                            <Setter Property="HorizontalAlignment" TargetName="selectors" Value="Center" />
                            <Setter Property="Margin" TargetName="selectors" Value="0,0,15,0" />
                            <Setter Property="Grid.Column" TargetName="icons" Value="1" />
                            <Setter Property="HorizontalAlignment" TargetName="icons" Value="Left" />
                            <Setter Property="Grid.Column" TargetName="errorIcon" Value="1" />
                            <Setter Property="HorizontalAlignment" TargetName="errorIcon" Value="Left" />
                            <Setter Property="HorizontalAlignment" TargetName="FixedRecordBtn" Value="Center" />
                            <Setter Property="Margin" TargetName="FixedRecordBtn" Value="15,0,0,0" />
                            <Setter Property="Background" TargetName="MainBorder" Value="#FFF5F5F5" />
                            <Setter Property="Visibility" TargetName="OrientationHorizontalSep" Value="Visible" />
                            <Setter TargetName="errorBd" Property="Width" Value="Auto" />
                            <Setter TargetName="errorBd" Property="Height" Value="2" />
                            <Setter TargetName="errorBd" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="errorBd" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="addRecordActiveOuter" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="addRecordActiveInner" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="addRecordOuter" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="addRecordInner" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="icons" Property="Grid.Column" Value="1" />
                            <Setter TargetName="icons" Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="RenderTransform" TargetName="selectorArrow">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="selectorArrow_Active">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="selectorAddRecord">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Location" Value="BelowCellArea">
                            <Setter Property="Grid.Column" TargetName="selectors" Value="1" />
                            <Setter Property="HorizontalAlignment" TargetName="selectors" Value="Center" />
                            <Setter Property="Margin" TargetName="selectors" Value="0,0,15,0" />
                            <Setter Property="Grid.Column" TargetName="icons" Value="1" />
                            <Setter Property="HorizontalAlignment" TargetName="icons" Value="Left" />
                            <Setter Property="Grid.Column" TargetName="errorIcon" Value="1" />
                            <Setter Property="HorizontalAlignment" TargetName="errorIcon" Value="Left" />
                            <Setter Property="HorizontalAlignment" TargetName="FixedRecordBtn" Value="Center" />
                            <Setter Property="Margin" TargetName="FixedRecordBtn" Value="15,0,0,0" />
                            <Setter Property="Background" TargetName="MainBorder" Value="#FFF5F5F5" />
                            <Setter Property="Visibility" TargetName="OrientationHorizontalSep" Value="Visible" />
                            <Setter TargetName="errorBd" Property="Width" Value="Auto" />
                            <Setter TargetName="errorBd" Property="Height" Value="2" />
                            <Setter TargetName="errorBd" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="errorBd" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="addRecordActiveOuter" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="addRecordActiveInner" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="addRecordOuter" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="addRecordInner" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="icons" Property="Grid.Column" Value="1" />
                            <Setter TargetName="icons" Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="RenderTransform" TargetName="selectorArrow">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="selectorArrow_Active">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="selectorAddRecord">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Location" Value="RightOfCellArea">
                            <Setter Property="RenderTransform" TargetName="selectorArrow">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="selectorArrow_Active">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="selectorAddRecord">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="FixedButtonVisibility" Value="Collapsed" />
                                <Condition Property="Location" Value="AboveCellArea" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="selectors" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="FixedButtonVisibility" Value="Collapsed" />
                                <Condition Property="Location" Value="BelowCellArea" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="selectors" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- _________________________ FilterCellValuePresenter ______________________________________ -->
    <Style TargetType="{x:Type igDp:FilterCellValuePresenter}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#FFCCCCCC" />
        <Setter Property="BackgroundHover" Value="Transparent" />
        <Setter Property="BorderHoverBrush" Value="#FFCCCCCC" />
        <Setter Property="BackgroundActive">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FF85A2B2" />
                    <GradientStop Offset="1.1" Color="#00FFFFFF" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderActiveBrush" Value="#FFCCCCCC" />
        <Setter Property="BackgroundSelected">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFCAEBFF" />
                    <GradientStop Offset="1.1" Color="#00FFFFFF" />
                    <GradientStop Color="#83CAEBFF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderSelectedBrush" Value="#FF666666" />
        <Setter Property="BackgroundFieldSelected">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFDDDDDD" />
                    <GradientStop Offset="1.1" Color="#00FFFFFF" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderFieldSelectedBrush" Value="#FF666666" />
        <Setter Property="BackgroundPrimary" Value="#7FE9E9E9" />
        <Setter Property="BorderPrimaryBrush" Value="#FFE9E9E9" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="ForegroundStyle">
            <Setter.Value>
                <Style />
            </Setter.Value>
        </Setter>
        <Setter Property="ForegroundActiveStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, BlackForegroundStyle}}" />
        <Setter Property="ForegroundAlternateStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, GrayForegroundStyle}}" />
        <Setter Property="ForegroundPrimaryStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, GrayForegroundStyle}}" />
        <Setter Property="ForegroundSelectedStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, BlackForegroundStyle}}" />
        <Setter Property="ForegroundFieldSelectedStyle"
                Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, BlackForegroundStyle}}" />
        <Setter Property="ForegroundHoverStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="TextBlock.Foreground" Value="#FF151C55" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!-- AS 5/23/07 BR23120 -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:FilterCellValuePresenter}">
                    <igWindows:CardPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="MainBorder"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle
                            x:Name="Active1"
                            Fill="{TemplateBinding BackgroundActive}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            SnapsToDevicePixels="True"
                            Opacity="1"
                            Visibility="Collapsed"
                            StrokeThickness="0"
                            Stroke="{TemplateBinding BorderActiveBrush}" />
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <igWindows:ComparisonOperatorSelector
                                Grid.Column="0"
                                IsDropDownOpen="{Binding IsOperatorDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                AllowableOperators="{Binding Field.FilterOperatorDropDownItemsResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                SelectedOperator="{Binding Operator, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding Field.FilterOperatorVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                Foreground="{TemplateBinding Foreground}" />
                            <Button
                                Style="{DynamicResource {x:Static igDp:DataPresenterBase.FilterCellClearButtonStyleKey}}"
                                Grid.Column="2"
                                Command="{x:Static igDp:DataPresenterCommands.ClearActiveCellFilters}"
                                Visibility="{Binding Field.FilterClearButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="2,0,4,0" />
                            <ContentPresenter
                                x:Name="PART_EditorSite"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Style="{TemplateBinding ForegroundStyle}" />
                        </Grid>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <!-- HighlightAsPrimary -->
                        <Trigger Property="HighlightAsPrimary" Value="true">
                            <Setter Property="Background"
                                    Value="{Binding Path=BackgroundPrimary, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=BorderPrimaryBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_EditorSite" Property="Style"
                                    Value="{Binding Path=ForegroundPrimaryStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <!-- IsFieldSelected -->
                        <Trigger Property="IsFieldSelected" Value="true">
                            <Setter Property="Background"
                                    Value="{Binding Path=BackgroundFieldSelected, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=BorderFieldSelectedBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_EditorSite" Property="Style"
                                    Value="{Binding Path=ForegroundFieldSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <!-- IsSelected -->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background"
                                    Value="{Binding Path=BackgroundSelected, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=BorderSelectedBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_EditorSite" Property="Style"
                                    Value="{Binding Path=ForegroundSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="LeftBorder" />-->
                        </Trigger>
                        <!-- IsActive -->
                        <Trigger Property="IsActive" Value="true">
                            <Setter TargetName="PART_EditorSite" Property="Style"
                                    Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Visibility" TargetName="Active1" Value="Visible" />
                        </Trigger>
                        <!-- IsMouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsFieldSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{Binding Path=BackgroundHover, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=BorderHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_EditorSite" Property="Style"
                                    Value="{Binding Path=ForegroundHoverStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="XamDataGridStyle1" TargetType="{x:Type igDp:XamDataGrid}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:XamDataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid x:Name="PART_ContentSiteGrid" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ExpanderBarStyle1" TargetType="{x:Type igWindows:ExpanderBar}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0" />
                    <GradientStop Color="#FFE8E8E9" Offset="0.5" />
                    <GradientStop Color="#FFD6D6D8" Offset="0.5" />
                    <GradientStop Color="#FFBCBDC0" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BackgroundHover">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FF83ACC0" Offset="0" />
                    <GradientStop Color="#FF3E7E9D" Offset="0.5" />
                    <GradientStop Color="#FF095276" Offset="0.5" />
                    <GradientStop Color="#FF4E96AA" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.BasedOn>
            <Style TargetType="{x:Type igWindows:ExpanderBar}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="Black" Offset="0" />
                            <GradientStop Color="Black" Offset="0.06" />
                            <GradientStop Color="#FFD0D0D0" Offset="0.37" />
                            <GradientStop Color="#FFCCCCCC" Offset="0.61" />
                            <GradientStop Color="#FFBDBDBD" Offset="0.63" />
                            <GradientStop Color="#FFBDBDBD" Offset="0.71" />
                            <GradientStop Color="#FFD0D0D0" Offset="0.74" />
                            <GradientStop Color="#FFCECECE" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BackgroundHover">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="Black" Offset="0" />
                            <GradientStop Color="Black" Offset="0.06" />
                            <GradientStop Color="#FFBED9EC" Offset="0.37" />
                            <GradientStop Color="#FFC3DBED" Offset="0.61" />
                            <GradientStop Color="#FFA4CDE9" Offset="0.63" />
                            <GradientStop Color="#FF9DCAE9" Offset="0.71" />
                            <GradientStop Color="#FFAED4ED" Offset="0.74" />
                            <GradientStop Color="#FFBADAF2" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF898C95" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderHoverBrush" Value="#FF4DA2E4" />
                <Setter Property="MinHeight" Value="10" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type igWindows:ExpanderBar}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    Storyboard.TargetName="over">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="normal" Fill="{DynamicResource CellItemSelectedBorderBrush}" />
                                <Rectangle x:Name="over" Opacity="0" StrokeThickness="0">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF016E89" Offset="1" />
                                            <GradientStop Color="#FF00A5CE" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Path x:Name="BtnArrow"
                                      Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                      HorizontalAlignment="Center" Height="4" Margin="0,0,6,0" Stretch="Uniform"
                                      Width="8">
                                    <Path.Fill>
                                        <SolidColorBrush x:Name="BtnArrowColor" Color="Black" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="over"
                                            Value="{Binding BackgroundHover, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter Property="Stroke" TargetName="over"
                                            Value="{Binding BorderHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="CircleMarkerTemplate">
        <Ellipse

            Stretch="Fill"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"


            StrokeThickness="0.5" MinWidth="30" MinHeight="30" />
    </DataTemplate>

</ResourceDictionary>